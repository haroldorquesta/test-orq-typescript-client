/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

export type PostV2RemoteconfigsRequestBody = {
  /**
   * Remote configuration key
   */
  key: string;
  /**
   * Key-value pairs matching your data model, applied to each prompt key.
   */
  context?: { [k: string]: any } | undefined;
  /**
   * Key-value pairs to attach to the log generated by this request.
   */
  metadata?: { [k: string]: any } | undefined;
};

export const PostV2RemoteconfigsType = {
  Boolean: "boolean",
  String: "string",
  Integer: "integer",
  Decimal: "decimal",
  List: "list",
  Json: "json",
  Deployment: "deployment",
} as const;
export type PostV2RemoteconfigsType = ClosedEnum<
  typeof PostV2RemoteconfigsType
>;

/**
 * An individual remote config
 */
export type PostV2RemoteconfigsResponseBody = {
  type: PostV2RemoteconfigsType;
  value?: any | undefined;
};

/** @internal */
export const PostV2RemoteconfigsRequestBody$inboundSchema: z.ZodType<
  PostV2RemoteconfigsRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  key: z.string(),
  context: z.record(z.any()).optional(),
  metadata: z.record(z.any()).optional(),
});

/** @internal */
export type PostV2RemoteconfigsRequestBody$Outbound = {
  key: string;
  context?: { [k: string]: any } | undefined;
  metadata?: { [k: string]: any } | undefined;
};

/** @internal */
export const PostV2RemoteconfigsRequestBody$outboundSchema: z.ZodType<
  PostV2RemoteconfigsRequestBody$Outbound,
  z.ZodTypeDef,
  PostV2RemoteconfigsRequestBody
> = z.object({
  key: z.string(),
  context: z.record(z.any()).optional(),
  metadata: z.record(z.any()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2RemoteconfigsRequestBody$ {
  /** @deprecated use `PostV2RemoteconfigsRequestBody$inboundSchema` instead. */
  export const inboundSchema = PostV2RemoteconfigsRequestBody$inboundSchema;
  /** @deprecated use `PostV2RemoteconfigsRequestBody$outboundSchema` instead. */
  export const outboundSchema = PostV2RemoteconfigsRequestBody$outboundSchema;
  /** @deprecated use `PostV2RemoteconfigsRequestBody$Outbound` instead. */
  export type Outbound = PostV2RemoteconfigsRequestBody$Outbound;
}

/** @internal */
export const PostV2RemoteconfigsType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2RemoteconfigsType
> = z.nativeEnum(PostV2RemoteconfigsType);

/** @internal */
export const PostV2RemoteconfigsType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2RemoteconfigsType
> = PostV2RemoteconfigsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2RemoteconfigsType$ {
  /** @deprecated use `PostV2RemoteconfigsType$inboundSchema` instead. */
  export const inboundSchema = PostV2RemoteconfigsType$inboundSchema;
  /** @deprecated use `PostV2RemoteconfigsType$outboundSchema` instead. */
  export const outboundSchema = PostV2RemoteconfigsType$outboundSchema;
}

/** @internal */
export const PostV2RemoteconfigsResponseBody$inboundSchema: z.ZodType<
  PostV2RemoteconfigsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: PostV2RemoteconfigsType$inboundSchema,
  value: z.any().optional(),
});

/** @internal */
export type PostV2RemoteconfigsResponseBody$Outbound = {
  type: string;
  value?: any | undefined;
};

/** @internal */
export const PostV2RemoteconfigsResponseBody$outboundSchema: z.ZodType<
  PostV2RemoteconfigsResponseBody$Outbound,
  z.ZodTypeDef,
  PostV2RemoteconfigsResponseBody
> = z.object({
  type: PostV2RemoteconfigsType$outboundSchema,
  value: z.any().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2RemoteconfigsResponseBody$ {
  /** @deprecated use `PostV2RemoteconfigsResponseBody$inboundSchema` instead. */
  export const inboundSchema = PostV2RemoteconfigsResponseBody$inboundSchema;
  /** @deprecated use `PostV2RemoteconfigsResponseBody$outboundSchema` instead. */
  export const outboundSchema = PostV2RemoteconfigsResponseBody$outboundSchema;
  /** @deprecated use `PostV2RemoteconfigsResponseBody$Outbound` instead. */
  export type Outbound = PostV2RemoteconfigsResponseBody$Outbound;
}
