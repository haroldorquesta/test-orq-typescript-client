/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
  PostV2RouterChatCompletionsAcceptEnum,
  routerPostV2RouterChatCompletions,
} from "../funcs/routerPostV2RouterChatCompletions.js";
import { routerPostV2RouterCompletions } from "../funcs/routerPostV2RouterCompletions.js";
import { routerPostV2RouterEmbeddings } from "../funcs/routerPostV2RouterEmbeddings.js";
import { routerPostV2RouterImagesGenerations } from "../funcs/routerPostV2RouterImagesGenerations.js";
import { routerPostV2RouterRerank } from "../funcs/routerPostV2RouterRerank.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export { PostV2RouterChatCompletionsAcceptEnum } from "../funcs/routerPostV2RouterChatCompletions.js";

export class Router extends ClientSDK {
  /**
   * Embeddings
   *
   * @remarks
   * Creates an embedding vector representing the input text.
   */
  async postV2RouterEmbeddings(
    request: operations.PostV2RouterEmbeddingsRequestBody,
    options?: RequestOptions,
  ): Promise<operations.PostV2RouterEmbeddingsResponseBody> {
    return unwrapAsync(routerPostV2RouterEmbeddings(
      this,
      request,
      options,
    ));
  }

  /**
   * Chat
   *
   * @remarks
   * For sending requests to chat completion models
   */
  async postV2RouterChatCompletions(
    request: operations.PostV2RouterChatCompletionsRequestBody,
    options?: RequestOptions & {
      acceptHeaderOverride?: PostV2RouterChatCompletionsAcceptEnum;
    },
  ): Promise<operations.PostV2RouterChatCompletionsResponse> {
    return unwrapAsync(routerPostV2RouterChatCompletions(
      this,
      request,
      options,
    ));
  }

  /**
   * legacy completions route
   *
   * @remarks
   * For sending requests to legacy completion models
   */
  async postV2RouterCompletions(
    request?: operations.PostV2RouterCompletionsRequestBody | undefined,
    options?: RequestOptions,
  ): Promise<operations.PostV2RouterCompletionsResponseBody> {
    return unwrapAsync(routerPostV2RouterCompletions(
      this,
      request,
      options,
    ));
  }

  /**
   * rerank route
   *
   * @remarks
   * For sending requests to rerank models
   */
  async postV2RouterRerank(
    request?: operations.PostV2RouterRerankRequestBody | undefined,
    options?: RequestOptions,
  ): Promise<operations.PostV2RouterRerankResponseBody> {
    return unwrapAsync(routerPostV2RouterRerank(
      this,
      request,
      options,
    ));
  }

  async postV2RouterImagesGenerations(
    request?: operations.PostV2RouterImagesGenerationsRequestBody | undefined,
    options?: RequestOptions,
  ): Promise<operations.PostV2RouterImagesGenerationsResponseBody> {
    return unwrapAsync(routerPostV2RouterImagesGenerations(
      this,
      request,
      options,
    ));
  }
}
