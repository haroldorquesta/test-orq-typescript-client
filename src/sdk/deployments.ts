/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { deploymentsPostV2DeploymentsGetConfig } from "../funcs/deploymentsPostV2DeploymentsGetConfig.js";
import { deploymentsPostV2DeploymentsIdMetrics } from "../funcs/deploymentsPostV2DeploymentsIdMetrics.js";
import {
  deploymentsPostV2DeploymentsInvoke,
  PostV2DeploymentsInvokeAcceptEnum,
} from "../funcs/deploymentsPostV2DeploymentsInvoke.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export { PostV2DeploymentsInvokeAcceptEnum } from "../funcs/deploymentsPostV2DeploymentsInvoke.js";

export class Deployments extends ClientSDK {
  /**
   * Get config
   *
   * @remarks
   * Retrieve the deployment configuration
   */
  async postV2DeploymentsGetConfig(
    request: operations.PostV2DeploymentsGetConfigRequestBody,
    options?: RequestOptions,
  ): Promise<operations.PostV2DeploymentsGetConfigResponseBody | undefined> {
    return unwrapAsync(deploymentsPostV2DeploymentsGetConfig(
      this,
      request,
      options,
    ));
  }

  /**
   * Invoke
   *
   * @remarks
   * Invoke a deployment with a given payload
   */
  async postV2DeploymentsInvoke(
    request: components.Deployments,
    options?: RequestOptions & {
      acceptHeaderOverride?: PostV2DeploymentsInvokeAcceptEnum;
    },
  ): Promise<operations.PostV2DeploymentsInvokeResponse | undefined> {
    return unwrapAsync(deploymentsPostV2DeploymentsInvoke(
      this,
      request,
      options,
    ));
  }

  /**
   * Add metrics
   *
   * @remarks
   * Add metrics to a deployment
   */
  async postV2DeploymentsIdMetrics(
    request: operations.PostV2DeploymentsIdMetricsRequest,
    options?: RequestOptions,
  ): Promise<operations.PostV2DeploymentsIdMetricsResponseBody> {
    return unwrapAsync(deploymentsPostV2DeploymentsIdMetrics(
      this,
      request,
      options,
    ));
  }
}
