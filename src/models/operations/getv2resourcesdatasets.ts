/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export type GetV2ResourcesDatasetsRequest = {
  page?: number | undefined;
  limit?: number | undefined;
};

/**
 * User model returned from the API
 */
export type GetV2ResourcesDatasetsUpdatedBy = {
  id: string;
  /**
   * Email of the user
   */
  email: string;
  /**
   * Display name of the user
   */
  displayName: string;
  /**
   * URL of the user logo
   */
  logoUrl: string | null;
};

/**
 * The role of the prompt message
 */
export const GetV2ResourcesDatasetsRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type GetV2ResourcesDatasetsRole = ClosedEnum<
  typeof GetV2ResourcesDatasetsRole
>;

export const GetV2ResourcesDatasets2ResourcesType = {
  ImageUrl: "image_url",
} as const;
export type GetV2ResourcesDatasets2ResourcesType = ClosedEnum<
  typeof GetV2ResourcesDatasets2ResourcesType
>;

export type GetV2ResourcesDatasets2ImageUrl = {
  /**
   * The orq.ai id of the image
   */
  id?: string | undefined;
  /**
   * Either a URL of the image or the base64 encoded data URI.
   */
  url: string;
  /**
   * Specifies the detail level of the image. Currently only supported with OpenAI models
   */
  detail?: string | undefined;
};

/**
 * The image part of the prompt message. Only supported with vision models.
 */
export type GetV2ResourcesDatasets22 = {
  type: GetV2ResourcesDatasets2ResourcesType;
  imageUrl: GetV2ResourcesDatasets2ImageUrl;
};

export const GetV2ResourcesDatasets2Type = {
  Text: "text",
} as const;
export type GetV2ResourcesDatasets2Type = ClosedEnum<
  typeof GetV2ResourcesDatasets2Type
>;

/**
 * Text content part of a prompt message
 */
export type GetV2ResourcesDatasets21 = {
  type: GetV2ResourcesDatasets2Type;
  text: string;
};

export type GetV2ResourcesDatasetsContent2 =
  | GetV2ResourcesDatasets21
  | GetV2ResourcesDatasets22;

/**
 * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
 */
export type GetV2ResourcesDatasetsContent =
  | string
  | Array<GetV2ResourcesDatasets21 | GetV2ResourcesDatasets22>;

export const GetV2ResourcesDatasetsType = {
  Function: "function",
} as const;
export type GetV2ResourcesDatasetsType = ClosedEnum<
  typeof GetV2ResourcesDatasetsType
>;

export type GetV2ResourcesDatasetsFunction = {
  name: string;
  /**
   * JSON string arguments for the functions
   */
  arguments: string;
};

export type GetV2ResourcesDatasetsToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type: GetV2ResourcesDatasetsType;
  function: GetV2ResourcesDatasetsFunction;
};

export type GetV2ResourcesDatasetsMessages = {
  /**
   * The role of the prompt message
   */
  role: GetV2ResourcesDatasetsRole;
  /**
   * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
   */
  content: string | Array<GetV2ResourcesDatasets21 | GetV2ResourcesDatasets22>;
  toolCalls?: Array<GetV2ResourcesDatasetsToolCalls> | undefined;
};

/**
 * Returned dataset row model from the API.
 */
export type GetV2ResourcesDatasetsItems = {
  id: string;
  /**
   * Input message(s) of the dataset row
   */
  messages: Array<GetV2ResourcesDatasetsMessages>;
  /**
   * Reference of the dataset row
   */
  expectedOutput?: string | null | undefined;
  /**
   * The date and time the resource was created
   */
  created?: Date | undefined;
  /**
   * The date and time the resource was last updated
   */
  updated?: Date | undefined;
};

/**
 * Returned dataset model from the API
 */
export type Items = {
  id: string;
  /**
   * Name of the dataset
   */
  displayName: string;
  /**
   * Domain ID reference
   */
  domainId: string;
  /**
   * User model returned from the API
   */
  updatedBy: GetV2ResourcesDatasetsUpdatedBy;
  /**
   * The user who last updated the dataset
   */
  updatedById: string | null;
  items: Array<GetV2ResourcesDatasetsItems>;
  /**
   * The date and time the resource was created
   */
  created?: Date | undefined;
  /**
   * The date and time the resource was last updated
   */
  updated?: Date | undefined;
};

/**
 * Datasets Retrieved.
 */
export type GetV2ResourcesDatasetsResponseBody = {
  count: number;
  page: number;
  limit: number;
  totalPages: number;
  items: Array<Items>;
};

/** @internal */
export const GetV2ResourcesDatasetsRequest$inboundSchema: z.ZodType<
  GetV2ResourcesDatasetsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  page: z.number().optional(),
  limit: z.number().optional(),
});

/** @internal */
export type GetV2ResourcesDatasetsRequest$Outbound = {
  page?: number | undefined;
  limit?: number | undefined;
};

/** @internal */
export const GetV2ResourcesDatasetsRequest$outboundSchema: z.ZodType<
  GetV2ResourcesDatasetsRequest$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasetsRequest
> = z.object({
  page: z.number().optional(),
  limit: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsRequest$ {
  /** @deprecated use `GetV2ResourcesDatasetsRequest$inboundSchema` instead. */
  export const inboundSchema = GetV2ResourcesDatasetsRequest$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsRequest$outboundSchema` instead. */
  export const outboundSchema = GetV2ResourcesDatasetsRequest$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsRequest$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsRequest$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasetsUpdatedBy$inboundSchema: z.ZodType<
  GetV2ResourcesDatasetsUpdatedBy,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  email: z.string(),
  display_name: z.string(),
  logo_url: z.nullable(z.string()),
}).transform((v) => {
  return remap$(v, {
    "display_name": "displayName",
    "logo_url": "logoUrl",
  });
});

/** @internal */
export type GetV2ResourcesDatasetsUpdatedBy$Outbound = {
  id: string;
  email: string;
  display_name: string;
  logo_url: string | null;
};

/** @internal */
export const GetV2ResourcesDatasetsUpdatedBy$outboundSchema: z.ZodType<
  GetV2ResourcesDatasetsUpdatedBy$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasetsUpdatedBy
> = z.object({
  id: z.string(),
  email: z.string(),
  displayName: z.string(),
  logoUrl: z.nullable(z.string()),
}).transform((v) => {
  return remap$(v, {
    displayName: "display_name",
    logoUrl: "logo_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsUpdatedBy$ {
  /** @deprecated use `GetV2ResourcesDatasetsUpdatedBy$inboundSchema` instead. */
  export const inboundSchema = GetV2ResourcesDatasetsUpdatedBy$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsUpdatedBy$outboundSchema` instead. */
  export const outboundSchema = GetV2ResourcesDatasetsUpdatedBy$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsUpdatedBy$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsUpdatedBy$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasetsRole$inboundSchema: z.ZodNativeEnum<
  typeof GetV2ResourcesDatasetsRole
> = z.nativeEnum(GetV2ResourcesDatasetsRole);

/** @internal */
export const GetV2ResourcesDatasetsRole$outboundSchema: z.ZodNativeEnum<
  typeof GetV2ResourcesDatasetsRole
> = GetV2ResourcesDatasetsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsRole$ {
  /** @deprecated use `GetV2ResourcesDatasetsRole$inboundSchema` instead. */
  export const inboundSchema = GetV2ResourcesDatasetsRole$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsRole$outboundSchema` instead. */
  export const outboundSchema = GetV2ResourcesDatasetsRole$outboundSchema;
}

/** @internal */
export const GetV2ResourcesDatasets2ResourcesType$inboundSchema:
  z.ZodNativeEnum<typeof GetV2ResourcesDatasets2ResourcesType> = z.nativeEnum(
    GetV2ResourcesDatasets2ResourcesType,
  );

/** @internal */
export const GetV2ResourcesDatasets2ResourcesType$outboundSchema:
  z.ZodNativeEnum<typeof GetV2ResourcesDatasets2ResourcesType> =
    GetV2ResourcesDatasets2ResourcesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasets2ResourcesType$ {
  /** @deprecated use `GetV2ResourcesDatasets2ResourcesType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ResourcesDatasets2ResourcesType$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasets2ResourcesType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ResourcesDatasets2ResourcesType$outboundSchema;
}

/** @internal */
export const GetV2ResourcesDatasets2ImageUrl$inboundSchema: z.ZodType<
  GetV2ResourcesDatasets2ImageUrl,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  url: z.string(),
  detail: z.string().optional(),
});

/** @internal */
export type GetV2ResourcesDatasets2ImageUrl$Outbound = {
  id?: string | undefined;
  url: string;
  detail?: string | undefined;
};

/** @internal */
export const GetV2ResourcesDatasets2ImageUrl$outboundSchema: z.ZodType<
  GetV2ResourcesDatasets2ImageUrl$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasets2ImageUrl
> = z.object({
  id: z.string().optional(),
  url: z.string(),
  detail: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasets2ImageUrl$ {
  /** @deprecated use `GetV2ResourcesDatasets2ImageUrl$inboundSchema` instead. */
  export const inboundSchema = GetV2ResourcesDatasets2ImageUrl$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasets2ImageUrl$outboundSchema` instead. */
  export const outboundSchema = GetV2ResourcesDatasets2ImageUrl$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasets2ImageUrl$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasets2ImageUrl$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasets22$inboundSchema: z.ZodType<
  GetV2ResourcesDatasets22,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetV2ResourcesDatasets2ResourcesType$inboundSchema,
  image_url: z.lazy(() => GetV2ResourcesDatasets2ImageUrl$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "image_url": "imageUrl",
  });
});

/** @internal */
export type GetV2ResourcesDatasets22$Outbound = {
  type: string;
  image_url: GetV2ResourcesDatasets2ImageUrl$Outbound;
};

/** @internal */
export const GetV2ResourcesDatasets22$outboundSchema: z.ZodType<
  GetV2ResourcesDatasets22$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasets22
> = z.object({
  type: GetV2ResourcesDatasets2ResourcesType$outboundSchema,
  imageUrl: z.lazy(() => GetV2ResourcesDatasets2ImageUrl$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    imageUrl: "image_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasets22$ {
  /** @deprecated use `GetV2ResourcesDatasets22$inboundSchema` instead. */
  export const inboundSchema = GetV2ResourcesDatasets22$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasets22$outboundSchema` instead. */
  export const outboundSchema = GetV2ResourcesDatasets22$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasets22$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasets22$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasets2Type$inboundSchema: z.ZodNativeEnum<
  typeof GetV2ResourcesDatasets2Type
> = z.nativeEnum(GetV2ResourcesDatasets2Type);

/** @internal */
export const GetV2ResourcesDatasets2Type$outboundSchema: z.ZodNativeEnum<
  typeof GetV2ResourcesDatasets2Type
> = GetV2ResourcesDatasets2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasets2Type$ {
  /** @deprecated use `GetV2ResourcesDatasets2Type$inboundSchema` instead. */
  export const inboundSchema = GetV2ResourcesDatasets2Type$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasets2Type$outboundSchema` instead. */
  export const outboundSchema = GetV2ResourcesDatasets2Type$outboundSchema;
}

/** @internal */
export const GetV2ResourcesDatasets21$inboundSchema: z.ZodType<
  GetV2ResourcesDatasets21,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetV2ResourcesDatasets2Type$inboundSchema,
  text: z.string(),
});

/** @internal */
export type GetV2ResourcesDatasets21$Outbound = {
  type: string;
  text: string;
};

/** @internal */
export const GetV2ResourcesDatasets21$outboundSchema: z.ZodType<
  GetV2ResourcesDatasets21$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasets21
> = z.object({
  type: GetV2ResourcesDatasets2Type$outboundSchema,
  text: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasets21$ {
  /** @deprecated use `GetV2ResourcesDatasets21$inboundSchema` instead. */
  export const inboundSchema = GetV2ResourcesDatasets21$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasets21$outboundSchema` instead. */
  export const outboundSchema = GetV2ResourcesDatasets21$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasets21$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasets21$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasetsContent2$inboundSchema: z.ZodType<
  GetV2ResourcesDatasetsContent2,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetV2ResourcesDatasets21$inboundSchema),
  z.lazy(() => GetV2ResourcesDatasets22$inboundSchema),
]);

/** @internal */
export type GetV2ResourcesDatasetsContent2$Outbound =
  | GetV2ResourcesDatasets21$Outbound
  | GetV2ResourcesDatasets22$Outbound;

/** @internal */
export const GetV2ResourcesDatasetsContent2$outboundSchema: z.ZodType<
  GetV2ResourcesDatasetsContent2$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasetsContent2
> = z.union([
  z.lazy(() => GetV2ResourcesDatasets21$outboundSchema),
  z.lazy(() => GetV2ResourcesDatasets22$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsContent2$ {
  /** @deprecated use `GetV2ResourcesDatasetsContent2$inboundSchema` instead. */
  export const inboundSchema = GetV2ResourcesDatasetsContent2$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsContent2$outboundSchema` instead. */
  export const outboundSchema = GetV2ResourcesDatasetsContent2$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsContent2$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsContent2$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasetsContent$inboundSchema: z.ZodType<
  GetV2ResourcesDatasetsContent,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => GetV2ResourcesDatasets21$inboundSchema),
    z.lazy(() => GetV2ResourcesDatasets22$inboundSchema),
  ])),
]);

/** @internal */
export type GetV2ResourcesDatasetsContent$Outbound =
  | string
  | Array<
    GetV2ResourcesDatasets21$Outbound | GetV2ResourcesDatasets22$Outbound
  >;

/** @internal */
export const GetV2ResourcesDatasetsContent$outboundSchema: z.ZodType<
  GetV2ResourcesDatasetsContent$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasetsContent
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => GetV2ResourcesDatasets21$outboundSchema),
    z.lazy(() => GetV2ResourcesDatasets22$outboundSchema),
  ])),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsContent$ {
  /** @deprecated use `GetV2ResourcesDatasetsContent$inboundSchema` instead. */
  export const inboundSchema = GetV2ResourcesDatasetsContent$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsContent$outboundSchema` instead. */
  export const outboundSchema = GetV2ResourcesDatasetsContent$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsContent$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsContent$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasetsType$inboundSchema: z.ZodNativeEnum<
  typeof GetV2ResourcesDatasetsType
> = z.nativeEnum(GetV2ResourcesDatasetsType);

/** @internal */
export const GetV2ResourcesDatasetsType$outboundSchema: z.ZodNativeEnum<
  typeof GetV2ResourcesDatasetsType
> = GetV2ResourcesDatasetsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsType$ {
  /** @deprecated use `GetV2ResourcesDatasetsType$inboundSchema` instead. */
  export const inboundSchema = GetV2ResourcesDatasetsType$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsType$outboundSchema` instead. */
  export const outboundSchema = GetV2ResourcesDatasetsType$outboundSchema;
}

/** @internal */
export const GetV2ResourcesDatasetsFunction$inboundSchema: z.ZodType<
  GetV2ResourcesDatasetsFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/** @internal */
export type GetV2ResourcesDatasetsFunction$Outbound = {
  name: string;
  arguments: string;
};

/** @internal */
export const GetV2ResourcesDatasetsFunction$outboundSchema: z.ZodType<
  GetV2ResourcesDatasetsFunction$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasetsFunction
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsFunction$ {
  /** @deprecated use `GetV2ResourcesDatasetsFunction$inboundSchema` instead. */
  export const inboundSchema = GetV2ResourcesDatasetsFunction$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsFunction$outboundSchema` instead. */
  export const outboundSchema = GetV2ResourcesDatasetsFunction$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsFunction$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsFunction$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasetsToolCalls$inboundSchema: z.ZodType<
  GetV2ResourcesDatasetsToolCalls,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: GetV2ResourcesDatasetsType$inboundSchema,
  function: z.lazy(() => GetV2ResourcesDatasetsFunction$inboundSchema),
});

/** @internal */
export type GetV2ResourcesDatasetsToolCalls$Outbound = {
  id?: string | undefined;
  index?: number | undefined;
  type: string;
  function: GetV2ResourcesDatasetsFunction$Outbound;
};

/** @internal */
export const GetV2ResourcesDatasetsToolCalls$outboundSchema: z.ZodType<
  GetV2ResourcesDatasetsToolCalls$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasetsToolCalls
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: GetV2ResourcesDatasetsType$outboundSchema,
  function: z.lazy(() => GetV2ResourcesDatasetsFunction$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsToolCalls$ {
  /** @deprecated use `GetV2ResourcesDatasetsToolCalls$inboundSchema` instead. */
  export const inboundSchema = GetV2ResourcesDatasetsToolCalls$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsToolCalls$outboundSchema` instead. */
  export const outboundSchema = GetV2ResourcesDatasetsToolCalls$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsToolCalls$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsToolCalls$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasetsMessages$inboundSchema: z.ZodType<
  GetV2ResourcesDatasetsMessages,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: GetV2ResourcesDatasetsRole$inboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => GetV2ResourcesDatasets21$inboundSchema),
      z.lazy(() => GetV2ResourcesDatasets22$inboundSchema),
    ])),
  ]),
  tool_calls: z.array(
    z.lazy(() => GetV2ResourcesDatasetsToolCalls$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "tool_calls": "toolCalls",
  });
});

/** @internal */
export type GetV2ResourcesDatasetsMessages$Outbound = {
  role: string;
  content:
    | string
    | Array<
      GetV2ResourcesDatasets21$Outbound | GetV2ResourcesDatasets22$Outbound
    >;
  tool_calls?: Array<GetV2ResourcesDatasetsToolCalls$Outbound> | undefined;
};

/** @internal */
export const GetV2ResourcesDatasetsMessages$outboundSchema: z.ZodType<
  GetV2ResourcesDatasetsMessages$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasetsMessages
> = z.object({
  role: GetV2ResourcesDatasetsRole$outboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => GetV2ResourcesDatasets21$outboundSchema),
      z.lazy(() => GetV2ResourcesDatasets22$outboundSchema),
    ])),
  ]),
  toolCalls: z.array(
    z.lazy(() => GetV2ResourcesDatasetsToolCalls$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    toolCalls: "tool_calls",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsMessages$ {
  /** @deprecated use `GetV2ResourcesDatasetsMessages$inboundSchema` instead. */
  export const inboundSchema = GetV2ResourcesDatasetsMessages$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsMessages$outboundSchema` instead. */
  export const outboundSchema = GetV2ResourcesDatasetsMessages$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsMessages$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsMessages$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasetsItems$inboundSchema: z.ZodType<
  GetV2ResourcesDatasetsItems,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  messages: z.array(z.lazy(() => GetV2ResourcesDatasetsMessages$inboundSchema)),
  expected_output: z.nullable(z.string()).optional(),
  created: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  updated: z.string().datetime({ offset: true }).default(
    "2024-10-22T07:23:04.365Z",
  ).transform(v => new Date(v)),
}).transform((v) => {
  return remap$(v, {
    "expected_output": "expectedOutput",
  });
});

/** @internal */
export type GetV2ResourcesDatasetsItems$Outbound = {
  id: string;
  messages: Array<GetV2ResourcesDatasetsMessages$Outbound>;
  expected_output?: string | null | undefined;
  created?: string | undefined;
  updated: string;
};

/** @internal */
export const GetV2ResourcesDatasetsItems$outboundSchema: z.ZodType<
  GetV2ResourcesDatasetsItems$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasetsItems
> = z.object({
  id: z.string(),
  messages: z.array(
    z.lazy(() => GetV2ResourcesDatasetsMessages$outboundSchema),
  ),
  expectedOutput: z.nullable(z.string()).optional(),
  created: z.date().transform(v => v.toISOString()).optional(),
  updated: z.date().default(() => new Date("2024-10-22T07:23:04.365Z"))
    .transform(v => v.toISOString()),
}).transform((v) => {
  return remap$(v, {
    expectedOutput: "expected_output",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsItems$ {
  /** @deprecated use `GetV2ResourcesDatasetsItems$inboundSchema` instead. */
  export const inboundSchema = GetV2ResourcesDatasetsItems$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsItems$outboundSchema` instead. */
  export const outboundSchema = GetV2ResourcesDatasetsItems$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsItems$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsItems$Outbound;
}

/** @internal */
export const Items$inboundSchema: z.ZodType<Items, z.ZodTypeDef, unknown> = z
  .object({
    id: z.string(),
    display_name: z.string(),
    domain_id: z.string(),
    updated_by: z.lazy(() => GetV2ResourcesDatasetsUpdatedBy$inboundSchema),
    updated_by_id: z.nullable(z.string()),
    items: z.array(z.lazy(() => GetV2ResourcesDatasetsItems$inboundSchema)),
    created: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updated: z.string().datetime({ offset: true }).default(
      "2024-10-22T07:23:04.365Z",
    ).transform(v => new Date(v)),
  }).transform((v) => {
    return remap$(v, {
      "display_name": "displayName",
      "domain_id": "domainId",
      "updated_by": "updatedBy",
      "updated_by_id": "updatedById",
    });
  });

/** @internal */
export type Items$Outbound = {
  id: string;
  display_name: string;
  domain_id: string;
  updated_by: GetV2ResourcesDatasetsUpdatedBy$Outbound;
  updated_by_id: string | null;
  items: Array<GetV2ResourcesDatasetsItems$Outbound>;
  created?: string | undefined;
  updated: string;
};

/** @internal */
export const Items$outboundSchema: z.ZodType<
  Items$Outbound,
  z.ZodTypeDef,
  Items
> = z.object({
  id: z.string(),
  displayName: z.string(),
  domainId: z.string(),
  updatedBy: z.lazy(() => GetV2ResourcesDatasetsUpdatedBy$outboundSchema),
  updatedById: z.nullable(z.string()),
  items: z.array(z.lazy(() => GetV2ResourcesDatasetsItems$outboundSchema)),
  created: z.date().transform(v => v.toISOString()).optional(),
  updated: z.date().default(() => new Date("2024-10-22T07:23:04.365Z"))
    .transform(v => v.toISOString()),
}).transform((v) => {
  return remap$(v, {
    displayName: "display_name",
    domainId: "domain_id",
    updatedBy: "updated_by",
    updatedById: "updated_by_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Items$ {
  /** @deprecated use `Items$inboundSchema` instead. */
  export const inboundSchema = Items$inboundSchema;
  /** @deprecated use `Items$outboundSchema` instead. */
  export const outboundSchema = Items$outboundSchema;
  /** @deprecated use `Items$Outbound` instead. */
  export type Outbound = Items$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasetsResponseBody$inboundSchema: z.ZodType<
  GetV2ResourcesDatasetsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number(),
  page: z.number(),
  limit: z.number(),
  totalPages: z.number(),
  items: z.array(z.lazy(() => Items$inboundSchema)),
});

/** @internal */
export type GetV2ResourcesDatasetsResponseBody$Outbound = {
  count: number;
  page: number;
  limit: number;
  totalPages: number;
  items: Array<Items$Outbound>;
};

/** @internal */
export const GetV2ResourcesDatasetsResponseBody$outboundSchema: z.ZodType<
  GetV2ResourcesDatasetsResponseBody$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasetsResponseBody
> = z.object({
  count: z.number(),
  page: z.number(),
  limit: z.number(),
  totalPages: z.number(),
  items: z.array(z.lazy(() => Items$outboundSchema)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsResponseBody$ {
  /** @deprecated use `GetV2ResourcesDatasetsResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetV2ResourcesDatasetsResponseBody$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ResourcesDatasetsResponseBody$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsResponseBody$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsResponseBody$Outbound;
}
