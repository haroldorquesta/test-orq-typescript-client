/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type PatchV2ResourcesDatasetsDatasetIdRequestBody = {
  /**
   * Name of the dataset
   */
  displayName?: string | undefined;
};

export type PatchV2ResourcesDatasetsDatasetIdRequest = {
  /**
   * Dataset ID
   */
  datasetId: string;
  requestBody?: PatchV2ResourcesDatasetsDatasetIdRequestBody | undefined;
};

/**
 * Dataset updated.
 */
export type PatchV2ResourcesDatasetsDatasetIdResponseBody = {
  /**
   * Name of the dataset
   */
  displayName?: string | undefined;
  /**
   * Domain ID reference
   */
  domainId?: string | undefined;
};

/** @internal */
export const PatchV2ResourcesDatasetsDatasetIdRequestBody$inboundSchema:
  z.ZodType<
    PatchV2ResourcesDatasetsDatasetIdRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    display_name: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      "display_name": "displayName",
    });
  });

/** @internal */
export type PatchV2ResourcesDatasetsDatasetIdRequestBody$Outbound = {
  display_name?: string | undefined;
};

/** @internal */
export const PatchV2ResourcesDatasetsDatasetIdRequestBody$outboundSchema:
  z.ZodType<
    PatchV2ResourcesDatasetsDatasetIdRequestBody$Outbound,
    z.ZodTypeDef,
    PatchV2ResourcesDatasetsDatasetIdRequestBody
  > = z.object({
    displayName: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      displayName: "display_name",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ResourcesDatasetsDatasetIdRequestBody$ {
  /** @deprecated use `PatchV2ResourcesDatasetsDatasetIdRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ResourcesDatasetsDatasetIdRequestBody$inboundSchema;
  /** @deprecated use `PatchV2ResourcesDatasetsDatasetIdRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ResourcesDatasetsDatasetIdRequestBody$outboundSchema;
  /** @deprecated use `PatchV2ResourcesDatasetsDatasetIdRequestBody$Outbound` instead. */
  export type Outbound = PatchV2ResourcesDatasetsDatasetIdRequestBody$Outbound;
}

/** @internal */
export const PatchV2ResourcesDatasetsDatasetIdRequest$inboundSchema: z.ZodType<
  PatchV2ResourcesDatasetsDatasetIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  dataset_id: z.string(),
  RequestBody: z.lazy(() =>
    PatchV2ResourcesDatasetsDatasetIdRequestBody$inboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "dataset_id": "datasetId",
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type PatchV2ResourcesDatasetsDatasetIdRequest$Outbound = {
  dataset_id: string;
  RequestBody?:
    | PatchV2ResourcesDatasetsDatasetIdRequestBody$Outbound
    | undefined;
};

/** @internal */
export const PatchV2ResourcesDatasetsDatasetIdRequest$outboundSchema: z.ZodType<
  PatchV2ResourcesDatasetsDatasetIdRequest$Outbound,
  z.ZodTypeDef,
  PatchV2ResourcesDatasetsDatasetIdRequest
> = z.object({
  datasetId: z.string(),
  requestBody: z.lazy(() =>
    PatchV2ResourcesDatasetsDatasetIdRequestBody$outboundSchema
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    datasetId: "dataset_id",
    requestBody: "RequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ResourcesDatasetsDatasetIdRequest$ {
  /** @deprecated use `PatchV2ResourcesDatasetsDatasetIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ResourcesDatasetsDatasetIdRequest$inboundSchema;
  /** @deprecated use `PatchV2ResourcesDatasetsDatasetIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ResourcesDatasetsDatasetIdRequest$outboundSchema;
  /** @deprecated use `PatchV2ResourcesDatasetsDatasetIdRequest$Outbound` instead. */
  export type Outbound = PatchV2ResourcesDatasetsDatasetIdRequest$Outbound;
}

/** @internal */
export const PatchV2ResourcesDatasetsDatasetIdResponseBody$inboundSchema:
  z.ZodType<
    PatchV2ResourcesDatasetsDatasetIdResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    display_name: z.string().optional(),
    domain_id: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      "display_name": "displayName",
      "domain_id": "domainId",
    });
  });

/** @internal */
export type PatchV2ResourcesDatasetsDatasetIdResponseBody$Outbound = {
  display_name?: string | undefined;
  domain_id?: string | undefined;
};

/** @internal */
export const PatchV2ResourcesDatasetsDatasetIdResponseBody$outboundSchema:
  z.ZodType<
    PatchV2ResourcesDatasetsDatasetIdResponseBody$Outbound,
    z.ZodTypeDef,
    PatchV2ResourcesDatasetsDatasetIdResponseBody
  > = z.object({
    displayName: z.string().optional(),
    domainId: z.string().optional(),
  }).transform((v) => {
    return remap$(v, {
      displayName: "display_name",
      domainId: "domain_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PatchV2ResourcesDatasetsDatasetIdResponseBody$ {
  /** @deprecated use `PatchV2ResourcesDatasetsDatasetIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PatchV2ResourcesDatasetsDatasetIdResponseBody$inboundSchema;
  /** @deprecated use `PatchV2ResourcesDatasetsDatasetIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PatchV2ResourcesDatasetsDatasetIdResponseBody$outboundSchema;
  /** @deprecated use `PatchV2ResourcesDatasetsDatasetIdResponseBody$Outbound` instead. */
  export type Outbound = PatchV2ResourcesDatasetsDatasetIdResponseBody$Outbound;
}
