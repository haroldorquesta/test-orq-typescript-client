/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { EventStream } from "../../lib/event-streams.js";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

/**
 * Response from the gateway
 */
export type PostV2DeploymentsInvokeDeploymentsResponseBody = {};

/**
 * Indicates the type of model used to generate the response
 */
export const ObjectT = {
  Chat: "chat",
  Completion: "completion",
  Image: "image",
} as const;
/**
 * Indicates the type of model used to generate the response
 */
export type ObjectT = ClosedEnum<typeof ObjectT>;

/**
 * The provider used to generate the response
 */
export const Provider = {
  Cohere: "cohere",
  Openai: "openai",
  Anthropic: "anthropic",
  Huggingface: "huggingface",
  Replicate: "replicate",
  Google: "google",
  GoogleAi: "google-ai",
  Azure: "azure",
  Aws: "aws",
  Anyscale: "anyscale",
  Perplexity: "perplexity",
  Groq: "groq",
  Fal: "fal",
  Leonardoai: "leonardoai",
  Nvidia: "nvidia",
} as const;
/**
 * The provider used to generate the response
 */
export type Provider = ClosedEnum<typeof Provider>;

/**
 * The role of the prompt message
 */
export const PostV2DeploymentsInvokeMessageDeploymentsRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type PostV2DeploymentsInvokeMessageDeploymentsRole = ClosedEnum<
  typeof PostV2DeploymentsInvokeMessageDeploymentsRole
>;

export type Message3 = {
  /**
   * The role of the prompt message
   */
  role: PostV2DeploymentsInvokeMessageDeploymentsRole;
  url: string;
};

/**
 * The role of the prompt message
 */
export const PostV2DeploymentsInvokeMessageRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type PostV2DeploymentsInvokeMessageRole = ClosedEnum<
  typeof PostV2DeploymentsInvokeMessageRole
>;

export type PostV2DeploymentsInvokeMessage2 = {
  /**
   * The role of the prompt message
   */
  role: PostV2DeploymentsInvokeMessageRole;
  content: string | null;
};

/**
 * The role of the prompt message
 */
export const PostV2DeploymentsInvokeMessageDeploymentsPublicRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type PostV2DeploymentsInvokeMessageDeploymentsPublicRole = ClosedEnum<
  typeof PostV2DeploymentsInvokeMessageDeploymentsPublicRole
>;

export const PostV2DeploymentsInvokeMessageType = {
  Function: "function",
} as const;
export type PostV2DeploymentsInvokeMessageType = ClosedEnum<
  typeof PostV2DeploymentsInvokeMessageType
>;

export type PostV2DeploymentsInvokeMessageFunction = {
  name: string;
  /**
   * JSON string arguments for the functions
   */
  arguments: string;
};

export type PostV2DeploymentsInvokeMessageToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type: PostV2DeploymentsInvokeMessageType;
  function: PostV2DeploymentsInvokeMessageFunction;
};

export type PostV2DeploymentsInvokeMessage1 = {
  /**
   * The role of the prompt message
   */
  role: PostV2DeploymentsInvokeMessageDeploymentsPublicRole;
  content?: string | null | undefined;
  toolCalls: Array<PostV2DeploymentsInvokeMessageToolCalls>;
};

export type PostV2DeploymentsInvokeMessage =
  | PostV2DeploymentsInvokeMessage2
  | Message3
  | PostV2DeploymentsInvokeMessage1;

export type PostV2DeploymentsInvokeChoices = {
  index: number;
  message?:
    | PostV2DeploymentsInvokeMessage2
    | Message3
    | PostV2DeploymentsInvokeMessage1
    | undefined;
  finishReason?: string | null | undefined;
};

/**
 * Metadata of the retrieved chunk from the knowledge base
 */
export type Metadata = {
  /**
   * Name of the file
   */
  fileName: string;
  /**
   * Page number of the chunk
   */
  pageNumber: number | null;
  /**
   * Type of the file
   */
  fileType: string;
  /**
   * Rerank scores are normalized to be in the range [0, 1]. Scores close to 1 indicate a high relevance to the query, and scores closer to 0 indicate low relevance. It is not accurate to assume a score of 0.9 means the document is 2x more relevant than a document with a score of 0.45
   */
  rerankScore?: number | undefined;
  /**
   * Search scores are normalized to be in the range [0, 1]. Search score is calculated based on `[Cosine Similarity](https://en.wikipedia.org/wiki/Cosine_similarity)` algorithm. Scores close to 1 indicate the document is closer to the query, and scores closer to 0 indicate the document is farther from the query.
   */
  searchScore: number;
};

export type Retrievals = {
  /**
   * Content of the retrieved chunk from the knowledge base
   */
  document: string;
  /**
   * Metadata of the retrieved chunk from the knowledge base
   */
  metadata: Metadata;
};

/**
 * Response from the gateway
 */
export type PostV2DeploymentsInvokeResponseBody = {
  /**
   * A unique identifier for the response. Can be used to add metrics to the transaction.
   */
  id: string;
  /**
   * A timestamp indicating when the object was created. Usually in a standardized format like ISO 8601
   */
  created: Date;
  /**
   * Indicates the type of model used to generate the response
   */
  object: ObjectT;
  /**
   * The model used to generate the response
   */
  model: string;
  /**
   * The provider used to generate the response
   */
  provider: Provider;
  /**
   * Indicates if the response is the final response
   */
  isFinal: boolean;
  /**
   * Indicates integration id used to generate the response
   */
  integrationId?: string | undefined;
  /**
   * A timestamp indicating when the object was finalized. Usually in a standardized format like ISO 8601
   */
  finalized?: Date | undefined;
  /**
   * Provider backed system fingerprint.
   */
  systemFingerprint?: string | null | undefined;
  /**
   * A list of choices generated by the model
   */
  choices: Array<PostV2DeploymentsInvokeChoices>;
  /**
   * List of documents retrieved from the knowledge base. This property is only available when the `include_retrievals` flag is set to `true` in the invoke settings. When stream is set to true, the `retrievals` property will be returned in the last streamed chunk where the property `is_final` is set to `true`.
   */
  retrievals?: Array<Retrievals> | undefined;
  /**
   * Response returned by the model provider. This functionality is only supported when streaming is not used. If streaming is used, the `provider_response` property will be set to `null`.
   */
  providerResponse?: any | undefined;
};

export type PostV2DeploymentsInvokeResponse =
  | PostV2DeploymentsInvokeResponseBody
  | EventStream<PostV2DeploymentsInvokeDeploymentsResponseBody>;

/** @internal */
export const PostV2DeploymentsInvokeDeploymentsResponseBody$inboundSchema:
  z.ZodType<
    PostV2DeploymentsInvokeDeploymentsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({});

/** @internal */
export type PostV2DeploymentsInvokeDeploymentsResponseBody$Outbound = {};

/** @internal */
export const PostV2DeploymentsInvokeDeploymentsResponseBody$outboundSchema:
  z.ZodType<
    PostV2DeploymentsInvokeDeploymentsResponseBody$Outbound,
    z.ZodTypeDef,
    PostV2DeploymentsInvokeDeploymentsResponseBody
  > = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2DeploymentsInvokeDeploymentsResponseBody$ {
  /** @deprecated use `PostV2DeploymentsInvokeDeploymentsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostV2DeploymentsInvokeDeploymentsResponseBody$inboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeDeploymentsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostV2DeploymentsInvokeDeploymentsResponseBody$outboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeDeploymentsResponseBody$Outbound` instead. */
  export type Outbound =
    PostV2DeploymentsInvokeDeploymentsResponseBody$Outbound;
}

/** @internal */
export const ObjectT$inboundSchema: z.ZodNativeEnum<typeof ObjectT> = z
  .nativeEnum(ObjectT);

/** @internal */
export const ObjectT$outboundSchema: z.ZodNativeEnum<typeof ObjectT> =
  ObjectT$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ObjectT$ {
  /** @deprecated use `ObjectT$inboundSchema` instead. */
  export const inboundSchema = ObjectT$inboundSchema;
  /** @deprecated use `ObjectT$outboundSchema` instead. */
  export const outboundSchema = ObjectT$outboundSchema;
}

/** @internal */
export const Provider$inboundSchema: z.ZodNativeEnum<typeof Provider> = z
  .nativeEnum(Provider);

/** @internal */
export const Provider$outboundSchema: z.ZodNativeEnum<typeof Provider> =
  Provider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Provider$ {
  /** @deprecated use `Provider$inboundSchema` instead. */
  export const inboundSchema = Provider$inboundSchema;
  /** @deprecated use `Provider$outboundSchema` instead. */
  export const outboundSchema = Provider$outboundSchema;
}

/** @internal */
export const PostV2DeploymentsInvokeMessageDeploymentsRole$inboundSchema:
  z.ZodNativeEnum<typeof PostV2DeploymentsInvokeMessageDeploymentsRole> = z
    .nativeEnum(PostV2DeploymentsInvokeMessageDeploymentsRole);

/** @internal */
export const PostV2DeploymentsInvokeMessageDeploymentsRole$outboundSchema:
  z.ZodNativeEnum<typeof PostV2DeploymentsInvokeMessageDeploymentsRole> =
    PostV2DeploymentsInvokeMessageDeploymentsRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2DeploymentsInvokeMessageDeploymentsRole$ {
  /** @deprecated use `PostV2DeploymentsInvokeMessageDeploymentsRole$inboundSchema` instead. */
  export const inboundSchema =
    PostV2DeploymentsInvokeMessageDeploymentsRole$inboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeMessageDeploymentsRole$outboundSchema` instead. */
  export const outboundSchema =
    PostV2DeploymentsInvokeMessageDeploymentsRole$outboundSchema;
}

/** @internal */
export const Message3$inboundSchema: z.ZodType<
  Message3,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: PostV2DeploymentsInvokeMessageDeploymentsRole$inboundSchema,
  url: z.string(),
});

/** @internal */
export type Message3$Outbound = {
  role: string;
  url: string;
};

/** @internal */
export const Message3$outboundSchema: z.ZodType<
  Message3$Outbound,
  z.ZodTypeDef,
  Message3
> = z.object({
  role: PostV2DeploymentsInvokeMessageDeploymentsRole$outboundSchema,
  url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Message3$ {
  /** @deprecated use `Message3$inboundSchema` instead. */
  export const inboundSchema = Message3$inboundSchema;
  /** @deprecated use `Message3$outboundSchema` instead. */
  export const outboundSchema = Message3$outboundSchema;
  /** @deprecated use `Message3$Outbound` instead. */
  export type Outbound = Message3$Outbound;
}

/** @internal */
export const PostV2DeploymentsInvokeMessageRole$inboundSchema: z.ZodNativeEnum<
  typeof PostV2DeploymentsInvokeMessageRole
> = z.nativeEnum(PostV2DeploymentsInvokeMessageRole);

/** @internal */
export const PostV2DeploymentsInvokeMessageRole$outboundSchema: z.ZodNativeEnum<
  typeof PostV2DeploymentsInvokeMessageRole
> = PostV2DeploymentsInvokeMessageRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2DeploymentsInvokeMessageRole$ {
  /** @deprecated use `PostV2DeploymentsInvokeMessageRole$inboundSchema` instead. */
  export const inboundSchema = PostV2DeploymentsInvokeMessageRole$inboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeMessageRole$outboundSchema` instead. */
  export const outboundSchema =
    PostV2DeploymentsInvokeMessageRole$outboundSchema;
}

/** @internal */
export const PostV2DeploymentsInvokeMessage2$inboundSchema: z.ZodType<
  PostV2DeploymentsInvokeMessage2,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: PostV2DeploymentsInvokeMessageRole$inboundSchema,
  content: z.nullable(z.string()),
});

/** @internal */
export type PostV2DeploymentsInvokeMessage2$Outbound = {
  role: string;
  content: string | null;
};

/** @internal */
export const PostV2DeploymentsInvokeMessage2$outboundSchema: z.ZodType<
  PostV2DeploymentsInvokeMessage2$Outbound,
  z.ZodTypeDef,
  PostV2DeploymentsInvokeMessage2
> = z.object({
  role: PostV2DeploymentsInvokeMessageRole$outboundSchema,
  content: z.nullable(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2DeploymentsInvokeMessage2$ {
  /** @deprecated use `PostV2DeploymentsInvokeMessage2$inboundSchema` instead. */
  export const inboundSchema = PostV2DeploymentsInvokeMessage2$inboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeMessage2$outboundSchema` instead. */
  export const outboundSchema = PostV2DeploymentsInvokeMessage2$outboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeMessage2$Outbound` instead. */
  export type Outbound = PostV2DeploymentsInvokeMessage2$Outbound;
}

/** @internal */
export const PostV2DeploymentsInvokeMessageDeploymentsPublicRole$inboundSchema:
  z.ZodNativeEnum<typeof PostV2DeploymentsInvokeMessageDeploymentsPublicRole> =
    z.nativeEnum(PostV2DeploymentsInvokeMessageDeploymentsPublicRole);

/** @internal */
export const PostV2DeploymentsInvokeMessageDeploymentsPublicRole$outboundSchema:
  z.ZodNativeEnum<typeof PostV2DeploymentsInvokeMessageDeploymentsPublicRole> =
    PostV2DeploymentsInvokeMessageDeploymentsPublicRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2DeploymentsInvokeMessageDeploymentsPublicRole$ {
  /** @deprecated use `PostV2DeploymentsInvokeMessageDeploymentsPublicRole$inboundSchema` instead. */
  export const inboundSchema =
    PostV2DeploymentsInvokeMessageDeploymentsPublicRole$inboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeMessageDeploymentsPublicRole$outboundSchema` instead. */
  export const outboundSchema =
    PostV2DeploymentsInvokeMessageDeploymentsPublicRole$outboundSchema;
}

/** @internal */
export const PostV2DeploymentsInvokeMessageType$inboundSchema: z.ZodNativeEnum<
  typeof PostV2DeploymentsInvokeMessageType
> = z.nativeEnum(PostV2DeploymentsInvokeMessageType);

/** @internal */
export const PostV2DeploymentsInvokeMessageType$outboundSchema: z.ZodNativeEnum<
  typeof PostV2DeploymentsInvokeMessageType
> = PostV2DeploymentsInvokeMessageType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2DeploymentsInvokeMessageType$ {
  /** @deprecated use `PostV2DeploymentsInvokeMessageType$inboundSchema` instead. */
  export const inboundSchema = PostV2DeploymentsInvokeMessageType$inboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeMessageType$outboundSchema` instead. */
  export const outboundSchema =
    PostV2DeploymentsInvokeMessageType$outboundSchema;
}

/** @internal */
export const PostV2DeploymentsInvokeMessageFunction$inboundSchema: z.ZodType<
  PostV2DeploymentsInvokeMessageFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/** @internal */
export type PostV2DeploymentsInvokeMessageFunction$Outbound = {
  name: string;
  arguments: string;
};

/** @internal */
export const PostV2DeploymentsInvokeMessageFunction$outboundSchema: z.ZodType<
  PostV2DeploymentsInvokeMessageFunction$Outbound,
  z.ZodTypeDef,
  PostV2DeploymentsInvokeMessageFunction
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2DeploymentsInvokeMessageFunction$ {
  /** @deprecated use `PostV2DeploymentsInvokeMessageFunction$inboundSchema` instead. */
  export const inboundSchema =
    PostV2DeploymentsInvokeMessageFunction$inboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeMessageFunction$outboundSchema` instead. */
  export const outboundSchema =
    PostV2DeploymentsInvokeMessageFunction$outboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeMessageFunction$Outbound` instead. */
  export type Outbound = PostV2DeploymentsInvokeMessageFunction$Outbound;
}

/** @internal */
export const PostV2DeploymentsInvokeMessageToolCalls$inboundSchema: z.ZodType<
  PostV2DeploymentsInvokeMessageToolCalls,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: PostV2DeploymentsInvokeMessageType$inboundSchema,
  function: z.lazy(() => PostV2DeploymentsInvokeMessageFunction$inboundSchema),
});

/** @internal */
export type PostV2DeploymentsInvokeMessageToolCalls$Outbound = {
  id?: string | undefined;
  index?: number | undefined;
  type: string;
  function: PostV2DeploymentsInvokeMessageFunction$Outbound;
};

/** @internal */
export const PostV2DeploymentsInvokeMessageToolCalls$outboundSchema: z.ZodType<
  PostV2DeploymentsInvokeMessageToolCalls$Outbound,
  z.ZodTypeDef,
  PostV2DeploymentsInvokeMessageToolCalls
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: PostV2DeploymentsInvokeMessageType$outboundSchema,
  function: z.lazy(() => PostV2DeploymentsInvokeMessageFunction$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2DeploymentsInvokeMessageToolCalls$ {
  /** @deprecated use `PostV2DeploymentsInvokeMessageToolCalls$inboundSchema` instead. */
  export const inboundSchema =
    PostV2DeploymentsInvokeMessageToolCalls$inboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeMessageToolCalls$outboundSchema` instead. */
  export const outboundSchema =
    PostV2DeploymentsInvokeMessageToolCalls$outboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeMessageToolCalls$Outbound` instead. */
  export type Outbound = PostV2DeploymentsInvokeMessageToolCalls$Outbound;
}

/** @internal */
export const PostV2DeploymentsInvokeMessage1$inboundSchema: z.ZodType<
  PostV2DeploymentsInvokeMessage1,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: PostV2DeploymentsInvokeMessageDeploymentsPublicRole$inboundSchema,
  content: z.nullable(z.string()).optional(),
  tool_calls: z.array(
    z.lazy(() => PostV2DeploymentsInvokeMessageToolCalls$inboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    "tool_calls": "toolCalls",
  });
});

/** @internal */
export type PostV2DeploymentsInvokeMessage1$Outbound = {
  role: string;
  content?: string | null | undefined;
  tool_calls: Array<PostV2DeploymentsInvokeMessageToolCalls$Outbound>;
};

/** @internal */
export const PostV2DeploymentsInvokeMessage1$outboundSchema: z.ZodType<
  PostV2DeploymentsInvokeMessage1$Outbound,
  z.ZodTypeDef,
  PostV2DeploymentsInvokeMessage1
> = z.object({
  role: PostV2DeploymentsInvokeMessageDeploymentsPublicRole$outboundSchema,
  content: z.nullable(z.string()).optional(),
  toolCalls: z.array(
    z.lazy(() => PostV2DeploymentsInvokeMessageToolCalls$outboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    toolCalls: "tool_calls",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2DeploymentsInvokeMessage1$ {
  /** @deprecated use `PostV2DeploymentsInvokeMessage1$inboundSchema` instead. */
  export const inboundSchema = PostV2DeploymentsInvokeMessage1$inboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeMessage1$outboundSchema` instead. */
  export const outboundSchema = PostV2DeploymentsInvokeMessage1$outboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeMessage1$Outbound` instead. */
  export type Outbound = PostV2DeploymentsInvokeMessage1$Outbound;
}

/** @internal */
export const PostV2DeploymentsInvokeMessage$inboundSchema: z.ZodType<
  PostV2DeploymentsInvokeMessage,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2DeploymentsInvokeMessage2$inboundSchema),
  z.lazy(() => Message3$inboundSchema),
  z.lazy(() => PostV2DeploymentsInvokeMessage1$inboundSchema),
]);

/** @internal */
export type PostV2DeploymentsInvokeMessage$Outbound =
  | PostV2DeploymentsInvokeMessage2$Outbound
  | Message3$Outbound
  | PostV2DeploymentsInvokeMessage1$Outbound;

/** @internal */
export const PostV2DeploymentsInvokeMessage$outboundSchema: z.ZodType<
  PostV2DeploymentsInvokeMessage$Outbound,
  z.ZodTypeDef,
  PostV2DeploymentsInvokeMessage
> = z.union([
  z.lazy(() => PostV2DeploymentsInvokeMessage2$outboundSchema),
  z.lazy(() => Message3$outboundSchema),
  z.lazy(() => PostV2DeploymentsInvokeMessage1$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2DeploymentsInvokeMessage$ {
  /** @deprecated use `PostV2DeploymentsInvokeMessage$inboundSchema` instead. */
  export const inboundSchema = PostV2DeploymentsInvokeMessage$inboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeMessage$outboundSchema` instead. */
  export const outboundSchema = PostV2DeploymentsInvokeMessage$outboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeMessage$Outbound` instead. */
  export type Outbound = PostV2DeploymentsInvokeMessage$Outbound;
}

/** @internal */
export const PostV2DeploymentsInvokeChoices$inboundSchema: z.ZodType<
  PostV2DeploymentsInvokeChoices,
  z.ZodTypeDef,
  unknown
> = z.object({
  index: z.number(),
  message: z.union([
    z.lazy(() => PostV2DeploymentsInvokeMessage2$inboundSchema),
    z.lazy(() => Message3$inboundSchema),
    z.lazy(() => PostV2DeploymentsInvokeMessage1$inboundSchema),
  ]).optional(),
  finish_reason: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "finish_reason": "finishReason",
  });
});

/** @internal */
export type PostV2DeploymentsInvokeChoices$Outbound = {
  index: number;
  message?:
    | PostV2DeploymentsInvokeMessage2$Outbound
    | Message3$Outbound
    | PostV2DeploymentsInvokeMessage1$Outbound
    | undefined;
  finish_reason?: string | null | undefined;
};

/** @internal */
export const PostV2DeploymentsInvokeChoices$outboundSchema: z.ZodType<
  PostV2DeploymentsInvokeChoices$Outbound,
  z.ZodTypeDef,
  PostV2DeploymentsInvokeChoices
> = z.object({
  index: z.number(),
  message: z.union([
    z.lazy(() => PostV2DeploymentsInvokeMessage2$outboundSchema),
    z.lazy(() => Message3$outboundSchema),
    z.lazy(() => PostV2DeploymentsInvokeMessage1$outboundSchema),
  ]).optional(),
  finishReason: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    finishReason: "finish_reason",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2DeploymentsInvokeChoices$ {
  /** @deprecated use `PostV2DeploymentsInvokeChoices$inboundSchema` instead. */
  export const inboundSchema = PostV2DeploymentsInvokeChoices$inboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeChoices$outboundSchema` instead. */
  export const outboundSchema = PostV2DeploymentsInvokeChoices$outboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeChoices$Outbound` instead. */
  export type Outbound = PostV2DeploymentsInvokeChoices$Outbound;
}

/** @internal */
export const Metadata$inboundSchema: z.ZodType<
  Metadata,
  z.ZodTypeDef,
  unknown
> = z.object({
  file_name: z.string(),
  page_number: z.nullable(z.number()),
  file_type: z.string(),
  rerank_score: z.number().optional(),
  search_score: z.number(),
}).transform((v) => {
  return remap$(v, {
    "file_name": "fileName",
    "page_number": "pageNumber",
    "file_type": "fileType",
    "rerank_score": "rerankScore",
    "search_score": "searchScore",
  });
});

/** @internal */
export type Metadata$Outbound = {
  file_name: string;
  page_number: number | null;
  file_type: string;
  rerank_score?: number | undefined;
  search_score: number;
};

/** @internal */
export const Metadata$outboundSchema: z.ZodType<
  Metadata$Outbound,
  z.ZodTypeDef,
  Metadata
> = z.object({
  fileName: z.string(),
  pageNumber: z.nullable(z.number()),
  fileType: z.string(),
  rerankScore: z.number().optional(),
  searchScore: z.number(),
}).transform((v) => {
  return remap$(v, {
    fileName: "file_name",
    pageNumber: "page_number",
    fileType: "file_type",
    rerankScore: "rerank_score",
    searchScore: "search_score",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Metadata$ {
  /** @deprecated use `Metadata$inboundSchema` instead. */
  export const inboundSchema = Metadata$inboundSchema;
  /** @deprecated use `Metadata$outboundSchema` instead. */
  export const outboundSchema = Metadata$outboundSchema;
  /** @deprecated use `Metadata$Outbound` instead. */
  export type Outbound = Metadata$Outbound;
}

/** @internal */
export const Retrievals$inboundSchema: z.ZodType<
  Retrievals,
  z.ZodTypeDef,
  unknown
> = z.object({
  document: z.string(),
  metadata: z.lazy(() => Metadata$inboundSchema),
});

/** @internal */
export type Retrievals$Outbound = {
  document: string;
  metadata: Metadata$Outbound;
};

/** @internal */
export const Retrievals$outboundSchema: z.ZodType<
  Retrievals$Outbound,
  z.ZodTypeDef,
  Retrievals
> = z.object({
  document: z.string(),
  metadata: z.lazy(() => Metadata$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Retrievals$ {
  /** @deprecated use `Retrievals$inboundSchema` instead. */
  export const inboundSchema = Retrievals$inboundSchema;
  /** @deprecated use `Retrievals$outboundSchema` instead. */
  export const outboundSchema = Retrievals$outboundSchema;
  /** @deprecated use `Retrievals$Outbound` instead. */
  export type Outbound = Retrievals$Outbound;
}

/** @internal */
export const PostV2DeploymentsInvokeResponseBody$inboundSchema: z.ZodType<
  PostV2DeploymentsInvokeResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  created: z.string().datetime({ offset: true }).transform(v => new Date(v)),
  object: ObjectT$inboundSchema,
  model: z.string(),
  provider: Provider$inboundSchema,
  is_final: z.boolean(),
  integration_id: z.string().optional(),
  finalized: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  system_fingerprint: z.nullable(z.string()).optional(),
  choices: z.array(z.lazy(() => PostV2DeploymentsInvokeChoices$inboundSchema)),
  retrievals: z.array(z.lazy(() => Retrievals$inboundSchema)).optional(),
  provider_response: z.any().optional(),
}).transform((v) => {
  return remap$(v, {
    "is_final": "isFinal",
    "integration_id": "integrationId",
    "system_fingerprint": "systemFingerprint",
    "provider_response": "providerResponse",
  });
});

/** @internal */
export type PostV2DeploymentsInvokeResponseBody$Outbound = {
  id: string;
  created: string;
  object: string;
  model: string;
  provider: string;
  is_final: boolean;
  integration_id?: string | undefined;
  finalized?: string | undefined;
  system_fingerprint?: string | null | undefined;
  choices: Array<PostV2DeploymentsInvokeChoices$Outbound>;
  retrievals?: Array<Retrievals$Outbound> | undefined;
  provider_response?: any | undefined;
};

/** @internal */
export const PostV2DeploymentsInvokeResponseBody$outboundSchema: z.ZodType<
  PostV2DeploymentsInvokeResponseBody$Outbound,
  z.ZodTypeDef,
  PostV2DeploymentsInvokeResponseBody
> = z.object({
  id: z.string(),
  created: z.date().transform(v => v.toISOString()),
  object: ObjectT$outboundSchema,
  model: z.string(),
  provider: Provider$outboundSchema,
  isFinal: z.boolean(),
  integrationId: z.string().optional(),
  finalized: z.date().transform(v => v.toISOString()).optional(),
  systemFingerprint: z.nullable(z.string()).optional(),
  choices: z.array(z.lazy(() => PostV2DeploymentsInvokeChoices$outboundSchema)),
  retrievals: z.array(z.lazy(() => Retrievals$outboundSchema)).optional(),
  providerResponse: z.any().optional(),
}).transform((v) => {
  return remap$(v, {
    isFinal: "is_final",
    integrationId: "integration_id",
    systemFingerprint: "system_fingerprint",
    providerResponse: "provider_response",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2DeploymentsInvokeResponseBody$ {
  /** @deprecated use `PostV2DeploymentsInvokeResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    PostV2DeploymentsInvokeResponseBody$inboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    PostV2DeploymentsInvokeResponseBody$outboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeResponseBody$Outbound` instead. */
  export type Outbound = PostV2DeploymentsInvokeResponseBody$Outbound;
}

/** @internal */
export const PostV2DeploymentsInvokeResponse$inboundSchema: z.ZodType<
  PostV2DeploymentsInvokeResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => PostV2DeploymentsInvokeResponseBody$inboundSchema),
  z.instanceof(ReadableStream<Uint8Array>).transform(stream => {
    return new EventStream({
      stream,
      decoder(rawEvent) {
        const schema = z.lazy(() =>
          PostV2DeploymentsInvokeDeploymentsResponseBody$inboundSchema
        );
        return schema.parse(rawEvent);
      },
    });
  }),
]);

/** @internal */
export type PostV2DeploymentsInvokeResponse$Outbound =
  | PostV2DeploymentsInvokeResponseBody$Outbound
  | never;

/** @internal */
export const PostV2DeploymentsInvokeResponse$outboundSchema: z.ZodType<
  PostV2DeploymentsInvokeResponse$Outbound,
  z.ZodTypeDef,
  PostV2DeploymentsInvokeResponse
> = z.union([
  z.lazy(() => PostV2DeploymentsInvokeResponseBody$outboundSchema),
  z.never(),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostV2DeploymentsInvokeResponse$ {
  /** @deprecated use `PostV2DeploymentsInvokeResponse$inboundSchema` instead. */
  export const inboundSchema = PostV2DeploymentsInvokeResponse$inboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeResponse$outboundSchema` instead. */
  export const outboundSchema = PostV2DeploymentsInvokeResponse$outboundSchema;
  /** @deprecated use `PostV2DeploymentsInvokeResponse$Outbound` instead. */
  export type Outbound = PostV2DeploymentsInvokeResponse$Outbound;
}
