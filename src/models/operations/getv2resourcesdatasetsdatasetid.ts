/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export type GetV2ResourcesDatasetsDatasetIdRequest = {
  /**
   * Dataset ID
   */
  datasetId: string;
};

/**
 * User model returned from the API
 */
export type UpdatedBy = {
  id: string;
  /**
   * Email of the user
   */
  email: string;
  /**
   * Display name of the user
   */
  displayName: string;
  /**
   * URL of the user logo
   */
  logoUrl: string | null;
};

/**
 * The role of the prompt message
 */
export const GetV2ResourcesDatasetsDatasetIdRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type GetV2ResourcesDatasetsDatasetIdRole = ClosedEnum<
  typeof GetV2ResourcesDatasetsDatasetIdRole
>;

export const GetV2ResourcesDatasetsDatasetId2ResourcesType = {
  ImageUrl: "image_url",
} as const;
export type GetV2ResourcesDatasetsDatasetId2ResourcesType = ClosedEnum<
  typeof GetV2ResourcesDatasetsDatasetId2ResourcesType
>;

export type GetV2ResourcesDatasetsDatasetId2ImageUrl = {
  /**
   * The orq.ai id of the image
   */
  id?: string | undefined;
  /**
   * Either a URL of the image or the base64 encoded data URI.
   */
  url: string;
  /**
   * Specifies the detail level of the image. Currently only supported with OpenAI models
   */
  detail?: string | undefined;
};

/**
 * The image part of the prompt message. Only supported with vision models.
 */
export type GetV2ResourcesDatasetsDatasetId22 = {
  type: GetV2ResourcesDatasetsDatasetId2ResourcesType;
  imageUrl: GetV2ResourcesDatasetsDatasetId2ImageUrl;
};

export const GetV2ResourcesDatasetsDatasetId2Type = {
  Text: "text",
} as const;
export type GetV2ResourcesDatasetsDatasetId2Type = ClosedEnum<
  typeof GetV2ResourcesDatasetsDatasetId2Type
>;

/**
 * Text content part of a prompt message
 */
export type GetV2ResourcesDatasetsDatasetId21 = {
  type: GetV2ResourcesDatasetsDatasetId2Type;
  text: string;
};

export type GetV2ResourcesDatasetsDatasetIdContent2 =
  | GetV2ResourcesDatasetsDatasetId21
  | GetV2ResourcesDatasetsDatasetId22;

/**
 * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
 */
export type GetV2ResourcesDatasetsDatasetIdContent =
  | string
  | Array<
    GetV2ResourcesDatasetsDatasetId21 | GetV2ResourcesDatasetsDatasetId22
  >;

export const GetV2ResourcesDatasetsDatasetIdType = {
  Function: "function",
} as const;
export type GetV2ResourcesDatasetsDatasetIdType = ClosedEnum<
  typeof GetV2ResourcesDatasetsDatasetIdType
>;

export type GetV2ResourcesDatasetsDatasetIdFunction = {
  name: string;
  /**
   * JSON string arguments for the functions
   */
  arguments: string;
};

export type GetV2ResourcesDatasetsDatasetIdToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type: GetV2ResourcesDatasetsDatasetIdType;
  function: GetV2ResourcesDatasetsDatasetIdFunction;
};

export type GetV2ResourcesDatasetsDatasetIdMessages = {
  /**
   * The role of the prompt message
   */
  role: GetV2ResourcesDatasetsDatasetIdRole;
  /**
   * The contents of the user message. Either the text content of the message or an array of content parts with a defined type, each can be of type `text` or `image_url` when passing in images. You can pass multiple images by adding multiple `image_url` content parts.
   */
  content:
    | string
    | Array<
      GetV2ResourcesDatasetsDatasetId21 | GetV2ResourcesDatasetsDatasetId22
    >;
  toolCalls?: Array<GetV2ResourcesDatasetsDatasetIdToolCalls> | undefined;
};

/**
 * Returned dataset row model from the API.
 */
export type GetV2ResourcesDatasetsDatasetIdItems = {
  id: string;
  /**
   * Input message(s) of the dataset row
   */
  messages: Array<GetV2ResourcesDatasetsDatasetIdMessages>;
  /**
   * Reference of the dataset row
   */
  expectedOutput?: string | null | undefined;
  /**
   * The date and time the resource was created
   */
  created?: Date | undefined;
  /**
   * The date and time the resource was last updated
   */
  updated?: Date | undefined;
};

/**
 * Returned dataset model from the API
 */
export type GetV2ResourcesDatasetsDatasetIdResponseBody = {
  id: string;
  /**
   * Name of the dataset
   */
  displayName: string;
  /**
   * Domain ID reference
   */
  domainId: string;
  /**
   * User model returned from the API
   */
  updatedBy: UpdatedBy;
  /**
   * The user who last updated the dataset
   */
  updatedById: string | null;
  items: Array<GetV2ResourcesDatasetsDatasetIdItems>;
  /**
   * The date and time the resource was created
   */
  created?: Date | undefined;
  /**
   * The date and time the resource was last updated
   */
  updated?: Date | undefined;
};

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdRequest$inboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  dataset_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "dataset_id": "datasetId",
  });
});

/** @internal */
export type GetV2ResourcesDatasetsDatasetIdRequest$Outbound = {
  dataset_id: string;
};

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdRequest$outboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetIdRequest$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasetsDatasetIdRequest
> = z.object({
  datasetId: z.string(),
}).transform((v) => {
  return remap$(v, {
    datasetId: "dataset_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsDatasetIdRequest$ {
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ResourcesDatasetsDatasetIdRequest$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ResourcesDatasetsDatasetIdRequest$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdRequest$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsDatasetIdRequest$Outbound;
}

/** @internal */
export const UpdatedBy$inboundSchema: z.ZodType<
  UpdatedBy,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  email: z.string(),
  display_name: z.string(),
  logo_url: z.nullable(z.string()),
}).transform((v) => {
  return remap$(v, {
    "display_name": "displayName",
    "logo_url": "logoUrl",
  });
});

/** @internal */
export type UpdatedBy$Outbound = {
  id: string;
  email: string;
  display_name: string;
  logo_url: string | null;
};

/** @internal */
export const UpdatedBy$outboundSchema: z.ZodType<
  UpdatedBy$Outbound,
  z.ZodTypeDef,
  UpdatedBy
> = z.object({
  id: z.string(),
  email: z.string(),
  displayName: z.string(),
  logoUrl: z.nullable(z.string()),
}).transform((v) => {
  return remap$(v, {
    displayName: "display_name",
    logoUrl: "logo_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdatedBy$ {
  /** @deprecated use `UpdatedBy$inboundSchema` instead. */
  export const inboundSchema = UpdatedBy$inboundSchema;
  /** @deprecated use `UpdatedBy$outboundSchema` instead. */
  export const outboundSchema = UpdatedBy$outboundSchema;
  /** @deprecated use `UpdatedBy$Outbound` instead. */
  export type Outbound = UpdatedBy$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdRole$inboundSchema: z.ZodNativeEnum<
  typeof GetV2ResourcesDatasetsDatasetIdRole
> = z.nativeEnum(GetV2ResourcesDatasetsDatasetIdRole);

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdRole$outboundSchema:
  z.ZodNativeEnum<typeof GetV2ResourcesDatasetsDatasetIdRole> =
    GetV2ResourcesDatasetsDatasetIdRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsDatasetIdRole$ {
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdRole$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ResourcesDatasetsDatasetIdRole$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdRole$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ResourcesDatasetsDatasetIdRole$outboundSchema;
}

/** @internal */
export const GetV2ResourcesDatasetsDatasetId2ResourcesType$inboundSchema:
  z.ZodNativeEnum<typeof GetV2ResourcesDatasetsDatasetId2ResourcesType> = z
    .nativeEnum(GetV2ResourcesDatasetsDatasetId2ResourcesType);

/** @internal */
export const GetV2ResourcesDatasetsDatasetId2ResourcesType$outboundSchema:
  z.ZodNativeEnum<typeof GetV2ResourcesDatasetsDatasetId2ResourcesType> =
    GetV2ResourcesDatasetsDatasetId2ResourcesType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsDatasetId2ResourcesType$ {
  /** @deprecated use `GetV2ResourcesDatasetsDatasetId2ResourcesType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ResourcesDatasetsDatasetId2ResourcesType$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetId2ResourcesType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ResourcesDatasetsDatasetId2ResourcesType$outboundSchema;
}

/** @internal */
export const GetV2ResourcesDatasetsDatasetId2ImageUrl$inboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetId2ImageUrl,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  url: z.string(),
  detail: z.string().optional(),
});

/** @internal */
export type GetV2ResourcesDatasetsDatasetId2ImageUrl$Outbound = {
  id?: string | undefined;
  url: string;
  detail?: string | undefined;
};

/** @internal */
export const GetV2ResourcesDatasetsDatasetId2ImageUrl$outboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetId2ImageUrl$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasetsDatasetId2ImageUrl
> = z.object({
  id: z.string().optional(),
  url: z.string(),
  detail: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsDatasetId2ImageUrl$ {
  /** @deprecated use `GetV2ResourcesDatasetsDatasetId2ImageUrl$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ResourcesDatasetsDatasetId2ImageUrl$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetId2ImageUrl$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ResourcesDatasetsDatasetId2ImageUrl$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetId2ImageUrl$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsDatasetId2ImageUrl$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasetsDatasetId22$inboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetId22,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetV2ResourcesDatasetsDatasetId2ResourcesType$inboundSchema,
  image_url: z.lazy(() =>
    GetV2ResourcesDatasetsDatasetId2ImageUrl$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "image_url": "imageUrl",
  });
});

/** @internal */
export type GetV2ResourcesDatasetsDatasetId22$Outbound = {
  type: string;
  image_url: GetV2ResourcesDatasetsDatasetId2ImageUrl$Outbound;
};

/** @internal */
export const GetV2ResourcesDatasetsDatasetId22$outboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetId22$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasetsDatasetId22
> = z.object({
  type: GetV2ResourcesDatasetsDatasetId2ResourcesType$outboundSchema,
  imageUrl: z.lazy(() =>
    GetV2ResourcesDatasetsDatasetId2ImageUrl$outboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    imageUrl: "image_url",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsDatasetId22$ {
  /** @deprecated use `GetV2ResourcesDatasetsDatasetId22$inboundSchema` instead. */
  export const inboundSchema = GetV2ResourcesDatasetsDatasetId22$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetId22$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ResourcesDatasetsDatasetId22$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetId22$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsDatasetId22$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasetsDatasetId2Type$inboundSchema:
  z.ZodNativeEnum<typeof GetV2ResourcesDatasetsDatasetId2Type> = z.nativeEnum(
    GetV2ResourcesDatasetsDatasetId2Type,
  );

/** @internal */
export const GetV2ResourcesDatasetsDatasetId2Type$outboundSchema:
  z.ZodNativeEnum<typeof GetV2ResourcesDatasetsDatasetId2Type> =
    GetV2ResourcesDatasetsDatasetId2Type$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsDatasetId2Type$ {
  /** @deprecated use `GetV2ResourcesDatasetsDatasetId2Type$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ResourcesDatasetsDatasetId2Type$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetId2Type$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ResourcesDatasetsDatasetId2Type$outboundSchema;
}

/** @internal */
export const GetV2ResourcesDatasetsDatasetId21$inboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetId21,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: GetV2ResourcesDatasetsDatasetId2Type$inboundSchema,
  text: z.string(),
});

/** @internal */
export type GetV2ResourcesDatasetsDatasetId21$Outbound = {
  type: string;
  text: string;
};

/** @internal */
export const GetV2ResourcesDatasetsDatasetId21$outboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetId21$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasetsDatasetId21
> = z.object({
  type: GetV2ResourcesDatasetsDatasetId2Type$outboundSchema,
  text: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsDatasetId21$ {
  /** @deprecated use `GetV2ResourcesDatasetsDatasetId21$inboundSchema` instead. */
  export const inboundSchema = GetV2ResourcesDatasetsDatasetId21$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetId21$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ResourcesDatasetsDatasetId21$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetId21$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsDatasetId21$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdContent2$inboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetIdContent2,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetV2ResourcesDatasetsDatasetId21$inboundSchema),
  z.lazy(() => GetV2ResourcesDatasetsDatasetId22$inboundSchema),
]);

/** @internal */
export type GetV2ResourcesDatasetsDatasetIdContent2$Outbound =
  | GetV2ResourcesDatasetsDatasetId21$Outbound
  | GetV2ResourcesDatasetsDatasetId22$Outbound;

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdContent2$outboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetIdContent2$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasetsDatasetIdContent2
> = z.union([
  z.lazy(() => GetV2ResourcesDatasetsDatasetId21$outboundSchema),
  z.lazy(() => GetV2ResourcesDatasetsDatasetId22$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsDatasetIdContent2$ {
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdContent2$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ResourcesDatasetsDatasetIdContent2$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdContent2$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ResourcesDatasetsDatasetIdContent2$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdContent2$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsDatasetIdContent2$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdContent$inboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetIdContent,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => GetV2ResourcesDatasetsDatasetId21$inboundSchema),
    z.lazy(() => GetV2ResourcesDatasetsDatasetId22$inboundSchema),
  ])),
]);

/** @internal */
export type GetV2ResourcesDatasetsDatasetIdContent$Outbound =
  | string
  | Array<
    | GetV2ResourcesDatasetsDatasetId21$Outbound
    | GetV2ResourcesDatasetsDatasetId22$Outbound
  >;

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdContent$outboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetIdContent$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasetsDatasetIdContent
> = z.union([
  z.string(),
  z.array(z.union([
    z.lazy(() => GetV2ResourcesDatasetsDatasetId21$outboundSchema),
    z.lazy(() => GetV2ResourcesDatasetsDatasetId22$outboundSchema),
  ])),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsDatasetIdContent$ {
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdContent$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ResourcesDatasetsDatasetIdContent$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdContent$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ResourcesDatasetsDatasetIdContent$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdContent$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsDatasetIdContent$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdType$inboundSchema: z.ZodNativeEnum<
  typeof GetV2ResourcesDatasetsDatasetIdType
> = z.nativeEnum(GetV2ResourcesDatasetsDatasetIdType);

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdType$outboundSchema:
  z.ZodNativeEnum<typeof GetV2ResourcesDatasetsDatasetIdType> =
    GetV2ResourcesDatasetsDatasetIdType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsDatasetIdType$ {
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdType$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ResourcesDatasetsDatasetIdType$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdType$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ResourcesDatasetsDatasetIdType$outboundSchema;
}

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdFunction$inboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetIdFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/** @internal */
export type GetV2ResourcesDatasetsDatasetIdFunction$Outbound = {
  name: string;
  arguments: string;
};

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdFunction$outboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetIdFunction$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasetsDatasetIdFunction
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsDatasetIdFunction$ {
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdFunction$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ResourcesDatasetsDatasetIdFunction$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdFunction$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ResourcesDatasetsDatasetIdFunction$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdFunction$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsDatasetIdFunction$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdToolCalls$inboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetIdToolCalls,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: GetV2ResourcesDatasetsDatasetIdType$inboundSchema,
  function: z.lazy(() => GetV2ResourcesDatasetsDatasetIdFunction$inboundSchema),
});

/** @internal */
export type GetV2ResourcesDatasetsDatasetIdToolCalls$Outbound = {
  id?: string | undefined;
  index?: number | undefined;
  type: string;
  function: GetV2ResourcesDatasetsDatasetIdFunction$Outbound;
};

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdToolCalls$outboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetIdToolCalls$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasetsDatasetIdToolCalls
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: GetV2ResourcesDatasetsDatasetIdType$outboundSchema,
  function: z.lazy(() =>
    GetV2ResourcesDatasetsDatasetIdFunction$outboundSchema
  ),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsDatasetIdToolCalls$ {
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdToolCalls$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ResourcesDatasetsDatasetIdToolCalls$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdToolCalls$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ResourcesDatasetsDatasetIdToolCalls$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdToolCalls$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsDatasetIdToolCalls$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdMessages$inboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetIdMessages,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: GetV2ResourcesDatasetsDatasetIdRole$inboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => GetV2ResourcesDatasetsDatasetId21$inboundSchema),
      z.lazy(() => GetV2ResourcesDatasetsDatasetId22$inboundSchema),
    ])),
  ]),
  tool_calls: z.array(
    z.lazy(() => GetV2ResourcesDatasetsDatasetIdToolCalls$inboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "tool_calls": "toolCalls",
  });
});

/** @internal */
export type GetV2ResourcesDatasetsDatasetIdMessages$Outbound = {
  role: string;
  content:
    | string
    | Array<
      | GetV2ResourcesDatasetsDatasetId21$Outbound
      | GetV2ResourcesDatasetsDatasetId22$Outbound
    >;
  tool_calls?:
    | Array<GetV2ResourcesDatasetsDatasetIdToolCalls$Outbound>
    | undefined;
};

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdMessages$outboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetIdMessages$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasetsDatasetIdMessages
> = z.object({
  role: GetV2ResourcesDatasetsDatasetIdRole$outboundSchema,
  content: z.union([
    z.string(),
    z.array(z.union([
      z.lazy(() => GetV2ResourcesDatasetsDatasetId21$outboundSchema),
      z.lazy(() => GetV2ResourcesDatasetsDatasetId22$outboundSchema),
    ])),
  ]),
  toolCalls: z.array(
    z.lazy(() => GetV2ResourcesDatasetsDatasetIdToolCalls$outboundSchema),
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    toolCalls: "tool_calls",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsDatasetIdMessages$ {
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdMessages$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ResourcesDatasetsDatasetIdMessages$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdMessages$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ResourcesDatasetsDatasetIdMessages$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdMessages$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsDatasetIdMessages$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdItems$inboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetIdItems,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  messages: z.array(
    z.lazy(() => GetV2ResourcesDatasetsDatasetIdMessages$inboundSchema),
  ),
  expected_output: z.nullable(z.string()).optional(),
  created: z.string().datetime({ offset: true }).transform(v => new Date(v))
    .optional(),
  updated: z.string().datetime({ offset: true }).default(
    "2024-10-22T07:23:04.365Z",
  ).transform(v => new Date(v)),
}).transform((v) => {
  return remap$(v, {
    "expected_output": "expectedOutput",
  });
});

/** @internal */
export type GetV2ResourcesDatasetsDatasetIdItems$Outbound = {
  id: string;
  messages: Array<GetV2ResourcesDatasetsDatasetIdMessages$Outbound>;
  expected_output?: string | null | undefined;
  created?: string | undefined;
  updated: string;
};

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdItems$outboundSchema: z.ZodType<
  GetV2ResourcesDatasetsDatasetIdItems$Outbound,
  z.ZodTypeDef,
  GetV2ResourcesDatasetsDatasetIdItems
> = z.object({
  id: z.string(),
  messages: z.array(
    z.lazy(() => GetV2ResourcesDatasetsDatasetIdMessages$outboundSchema),
  ),
  expectedOutput: z.nullable(z.string()).optional(),
  created: z.date().transform(v => v.toISOString()).optional(),
  updated: z.date().default(() => new Date("2024-10-22T07:23:04.365Z"))
    .transform(v => v.toISOString()),
}).transform((v) => {
  return remap$(v, {
    expectedOutput: "expected_output",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsDatasetIdItems$ {
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdItems$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ResourcesDatasetsDatasetIdItems$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdItems$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ResourcesDatasetsDatasetIdItems$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdItems$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsDatasetIdItems$Outbound;
}

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdResponseBody$inboundSchema:
  z.ZodType<
    GetV2ResourcesDatasetsDatasetIdResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    id: z.string(),
    display_name: z.string(),
    domain_id: z.string(),
    updated_by: z.lazy(() => UpdatedBy$inboundSchema),
    updated_by_id: z.nullable(z.string()),
    items: z.array(
      z.lazy(() => GetV2ResourcesDatasetsDatasetIdItems$inboundSchema),
    ),
    created: z.string().datetime({ offset: true }).transform(v => new Date(v))
      .optional(),
    updated: z.string().datetime({ offset: true }).default(
      "2024-10-22T07:23:04.365Z",
    ).transform(v => new Date(v)),
  }).transform((v) => {
    return remap$(v, {
      "display_name": "displayName",
      "domain_id": "domainId",
      "updated_by": "updatedBy",
      "updated_by_id": "updatedById",
    });
  });

/** @internal */
export type GetV2ResourcesDatasetsDatasetIdResponseBody$Outbound = {
  id: string;
  display_name: string;
  domain_id: string;
  updated_by: UpdatedBy$Outbound;
  updated_by_id: string | null;
  items: Array<GetV2ResourcesDatasetsDatasetIdItems$Outbound>;
  created?: string | undefined;
  updated: string;
};

/** @internal */
export const GetV2ResourcesDatasetsDatasetIdResponseBody$outboundSchema:
  z.ZodType<
    GetV2ResourcesDatasetsDatasetIdResponseBody$Outbound,
    z.ZodTypeDef,
    GetV2ResourcesDatasetsDatasetIdResponseBody
  > = z.object({
    id: z.string(),
    displayName: z.string(),
    domainId: z.string(),
    updatedBy: z.lazy(() => UpdatedBy$outboundSchema),
    updatedById: z.nullable(z.string()),
    items: z.array(
      z.lazy(() => GetV2ResourcesDatasetsDatasetIdItems$outboundSchema),
    ),
    created: z.date().transform(v => v.toISOString()).optional(),
    updated: z.date().default(() => new Date("2024-10-22T07:23:04.365Z"))
      .transform(v => v.toISOString()),
  }).transform((v) => {
    return remap$(v, {
      displayName: "display_name",
      domainId: "domain_id",
      updatedBy: "updated_by",
      updatedById: "updated_by_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV2ResourcesDatasetsDatasetIdResponseBody$ {
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetV2ResourcesDatasetsDatasetIdResponseBody$inboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetV2ResourcesDatasetsDatasetIdResponseBody$outboundSchema;
  /** @deprecated use `GetV2ResourcesDatasetsDatasetIdResponseBody$Outbound` instead. */
  export type Outbound = GetV2ResourcesDatasetsDatasetIdResponseBody$Outbound;
}
