/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

/**
 * The quality of the image
 */
export const Quality = {
  Standard: "standard",
  Hd: "hd",
} as const;
/**
 * The quality of the image
 */
export type Quality = ClosedEnum<typeof Quality>;

/**
 * The format of the image
 */
export const ResponseFormat = {
  Url: "url",
  B64Json: "b64_json",
} as const;
/**
 * The format of the image
 */
export type ResponseFormat = ClosedEnum<typeof ResponseFormat>;

/**
 * The size of the image
 */
export const Size = {
  TwoHundredAndFiftySixx256: "256x256",
  FiveHundredAndTwelvex512: "512x512",
  OneThousandAndTwentyFourx1024: "1024x1024",
} as const;
/**
 * The size of the image
 */
export type Size = ClosedEnum<typeof Size>;

/**
 * A request body that follows the official OpenAI schema
 */
export type ImageGenerationsRequestBody = {
  /**
   * The prompt to generate an image
   */
  prompt: string;
  /**
   * The model to use for generation
   */
  model?: string | undefined;
  /**
   * The number of images to generate
   */
  n?: number | undefined;
  /**
   * The quality of the image
   */
  quality?: Quality | undefined;
  /**
   * The format of the image
   */
  responseFormat?: ResponseFormat | undefined;
  /**
   * The size of the image
   */
  size?: Size | undefined;
  /**
   * The style of the image
   */
  style?: string | undefined;
  /**
   * The user who created the image
   */
  user?: string | undefined;
};

/**
 * The role of the prompt message
 */
export const ImageGenerationsMessageRouterImagesResponseRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type ImageGenerationsMessageRouterImagesResponseRole = ClosedEnum<
  typeof ImageGenerationsMessageRouterImagesResponseRole
>;

export const ImageGenerationsMessageType = {
  Function: "function",
} as const;
export type ImageGenerationsMessageType = ClosedEnum<
  typeof ImageGenerationsMessageType
>;

export type ImageGenerationsMessageFunction = {
  name: string;
  /**
   * JSON string arguments for the functions
   */
  arguments: string;
};

export type ImageGenerationsMessageToolCalls = {
  id?: string | undefined;
  index?: number | undefined;
  type: ImageGenerationsMessageType;
  function: ImageGenerationsMessageFunction;
};

export type ImageGenerationsMessage3 = {
  /**
   * The role of the prompt message
   */
  role: ImageGenerationsMessageRouterImagesResponseRole;
  toolCalls: Array<ImageGenerationsMessageToolCalls>;
};

/**
 * The role of the prompt message
 */
export const ImageGenerationsMessageRouterImagesRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type ImageGenerationsMessageRouterImagesRole = ClosedEnum<
  typeof ImageGenerationsMessageRouterImagesRole
>;

export type ImageGenerationsMessage2 = {
  /**
   * The role of the prompt message
   */
  role: ImageGenerationsMessageRouterImagesRole;
  url: string;
};

/**
 * The role of the prompt message
 */
export const ImageGenerationsMessageRole = {
  System: "system",
  Assistant: "assistant",
  User: "user",
  Exception: "exception",
  Tool: "tool",
  Prompt: "prompt",
  Correction: "correction",
  ExpectedOutput: "expected_output",
} as const;
/**
 * The role of the prompt message
 */
export type ImageGenerationsMessageRole = ClosedEnum<
  typeof ImageGenerationsMessageRole
>;

export type ImageGenerationsMessage1 = {
  /**
   * The role of the prompt message
   */
  role: ImageGenerationsMessageRole;
  content: string | null;
};

export type ImageGenerationsMessage =
  | ImageGenerationsMessage1
  | ImageGenerationsMessage2
  | ImageGenerationsMessage3;

export type ImageGenerationsChoices = {
  /**
   * The reason for finishing the generation
   */
  finishReason?: string | null | undefined;
  /**
   * The index of the choice in the list of choices.
   */
  index: number;
  message?:
    | ImageGenerationsMessage1
    | ImageGenerationsMessage2
    | ImageGenerationsMessage3
    | undefined;
};

/**
 * A response body that follows the official OpenAI schema
 */
export type ImageGenerationsResponseBody = {
  /**
   * The unique identifier of the created image
   */
  id: string;
  created: number;
  /**
   * The list of create image choices the model generated for the prompt.
   */
  choices: Array<ImageGenerationsChoices>;
  /**
   * The model used for the image creation.
   */
  model: string;
  /**
   * The object type
   */
  object: string;
};

/** @internal */
export const Quality$inboundSchema: z.ZodNativeEnum<typeof Quality> = z
  .nativeEnum(Quality);

/** @internal */
export const Quality$outboundSchema: z.ZodNativeEnum<typeof Quality> =
  Quality$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Quality$ {
  /** @deprecated use `Quality$inboundSchema` instead. */
  export const inboundSchema = Quality$inboundSchema;
  /** @deprecated use `Quality$outboundSchema` instead. */
  export const outboundSchema = Quality$outboundSchema;
}

/** @internal */
export const ResponseFormat$inboundSchema: z.ZodNativeEnum<
  typeof ResponseFormat
> = z.nativeEnum(ResponseFormat);

/** @internal */
export const ResponseFormat$outboundSchema: z.ZodNativeEnum<
  typeof ResponseFormat
> = ResponseFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseFormat$ {
  /** @deprecated use `ResponseFormat$inboundSchema` instead. */
  export const inboundSchema = ResponseFormat$inboundSchema;
  /** @deprecated use `ResponseFormat$outboundSchema` instead. */
  export const outboundSchema = ResponseFormat$outboundSchema;
}

/** @internal */
export const Size$inboundSchema: z.ZodNativeEnum<typeof Size> = z.nativeEnum(
  Size,
);

/** @internal */
export const Size$outboundSchema: z.ZodNativeEnum<typeof Size> =
  Size$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Size$ {
  /** @deprecated use `Size$inboundSchema` instead. */
  export const inboundSchema = Size$inboundSchema;
  /** @deprecated use `Size$outboundSchema` instead. */
  export const outboundSchema = Size$outboundSchema;
}

/** @internal */
export const ImageGenerationsRequestBody$inboundSchema: z.ZodType<
  ImageGenerationsRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  prompt: z.string(),
  model: z.string().default("openai/dall-e-2"),
  n: z.number().default(1),
  quality: Quality$inboundSchema.default("standard"),
  response_format: ResponseFormat$inboundSchema.default("url"),
  size: Size$inboundSchema.default("1024x1024"),
  style: z.string().default("vivid"),
  user: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "response_format": "responseFormat",
  });
});

/** @internal */
export type ImageGenerationsRequestBody$Outbound = {
  prompt: string;
  model: string;
  n: number;
  quality: string;
  response_format: string;
  size: string;
  style: string;
  user?: string | undefined;
};

/** @internal */
export const ImageGenerationsRequestBody$outboundSchema: z.ZodType<
  ImageGenerationsRequestBody$Outbound,
  z.ZodTypeDef,
  ImageGenerationsRequestBody
> = z.object({
  prompt: z.string(),
  model: z.string().default("openai/dall-e-2"),
  n: z.number().default(1),
  quality: Quality$outboundSchema.default("standard"),
  responseFormat: ResponseFormat$outboundSchema.default("url"),
  size: Size$outboundSchema.default("1024x1024"),
  style: z.string().default("vivid"),
  user: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    responseFormat: "response_format",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImageGenerationsRequestBody$ {
  /** @deprecated use `ImageGenerationsRequestBody$inboundSchema` instead. */
  export const inboundSchema = ImageGenerationsRequestBody$inboundSchema;
  /** @deprecated use `ImageGenerationsRequestBody$outboundSchema` instead. */
  export const outboundSchema = ImageGenerationsRequestBody$outboundSchema;
  /** @deprecated use `ImageGenerationsRequestBody$Outbound` instead. */
  export type Outbound = ImageGenerationsRequestBody$Outbound;
}

/** @internal */
export const ImageGenerationsMessageRouterImagesResponseRole$inboundSchema:
  z.ZodNativeEnum<typeof ImageGenerationsMessageRouterImagesResponseRole> = z
    .nativeEnum(ImageGenerationsMessageRouterImagesResponseRole);

/** @internal */
export const ImageGenerationsMessageRouterImagesResponseRole$outboundSchema:
  z.ZodNativeEnum<typeof ImageGenerationsMessageRouterImagesResponseRole> =
    ImageGenerationsMessageRouterImagesResponseRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImageGenerationsMessageRouterImagesResponseRole$ {
  /** @deprecated use `ImageGenerationsMessageRouterImagesResponseRole$inboundSchema` instead. */
  export const inboundSchema =
    ImageGenerationsMessageRouterImagesResponseRole$inboundSchema;
  /** @deprecated use `ImageGenerationsMessageRouterImagesResponseRole$outboundSchema` instead. */
  export const outboundSchema =
    ImageGenerationsMessageRouterImagesResponseRole$outboundSchema;
}

/** @internal */
export const ImageGenerationsMessageType$inboundSchema: z.ZodNativeEnum<
  typeof ImageGenerationsMessageType
> = z.nativeEnum(ImageGenerationsMessageType);

/** @internal */
export const ImageGenerationsMessageType$outboundSchema: z.ZodNativeEnum<
  typeof ImageGenerationsMessageType
> = ImageGenerationsMessageType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImageGenerationsMessageType$ {
  /** @deprecated use `ImageGenerationsMessageType$inboundSchema` instead. */
  export const inboundSchema = ImageGenerationsMessageType$inboundSchema;
  /** @deprecated use `ImageGenerationsMessageType$outboundSchema` instead. */
  export const outboundSchema = ImageGenerationsMessageType$outboundSchema;
}

/** @internal */
export const ImageGenerationsMessageFunction$inboundSchema: z.ZodType<
  ImageGenerationsMessageFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/** @internal */
export type ImageGenerationsMessageFunction$Outbound = {
  name: string;
  arguments: string;
};

/** @internal */
export const ImageGenerationsMessageFunction$outboundSchema: z.ZodType<
  ImageGenerationsMessageFunction$Outbound,
  z.ZodTypeDef,
  ImageGenerationsMessageFunction
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImageGenerationsMessageFunction$ {
  /** @deprecated use `ImageGenerationsMessageFunction$inboundSchema` instead. */
  export const inboundSchema = ImageGenerationsMessageFunction$inboundSchema;
  /** @deprecated use `ImageGenerationsMessageFunction$outboundSchema` instead. */
  export const outboundSchema = ImageGenerationsMessageFunction$outboundSchema;
  /** @deprecated use `ImageGenerationsMessageFunction$Outbound` instead. */
  export type Outbound = ImageGenerationsMessageFunction$Outbound;
}

/** @internal */
export const ImageGenerationsMessageToolCalls$inboundSchema: z.ZodType<
  ImageGenerationsMessageToolCalls,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: ImageGenerationsMessageType$inboundSchema,
  function: z.lazy(() => ImageGenerationsMessageFunction$inboundSchema),
});

/** @internal */
export type ImageGenerationsMessageToolCalls$Outbound = {
  id?: string | undefined;
  index?: number | undefined;
  type: string;
  function: ImageGenerationsMessageFunction$Outbound;
};

/** @internal */
export const ImageGenerationsMessageToolCalls$outboundSchema: z.ZodType<
  ImageGenerationsMessageToolCalls$Outbound,
  z.ZodTypeDef,
  ImageGenerationsMessageToolCalls
> = z.object({
  id: z.string().optional(),
  index: z.number().optional(),
  type: ImageGenerationsMessageType$outboundSchema,
  function: z.lazy(() => ImageGenerationsMessageFunction$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImageGenerationsMessageToolCalls$ {
  /** @deprecated use `ImageGenerationsMessageToolCalls$inboundSchema` instead. */
  export const inboundSchema = ImageGenerationsMessageToolCalls$inboundSchema;
  /** @deprecated use `ImageGenerationsMessageToolCalls$outboundSchema` instead. */
  export const outboundSchema = ImageGenerationsMessageToolCalls$outboundSchema;
  /** @deprecated use `ImageGenerationsMessageToolCalls$Outbound` instead. */
  export type Outbound = ImageGenerationsMessageToolCalls$Outbound;
}

/** @internal */
export const ImageGenerationsMessage3$inboundSchema: z.ZodType<
  ImageGenerationsMessage3,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: ImageGenerationsMessageRouterImagesResponseRole$inboundSchema,
  tool_calls: z.array(
    z.lazy(() => ImageGenerationsMessageToolCalls$inboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    "tool_calls": "toolCalls",
  });
});

/** @internal */
export type ImageGenerationsMessage3$Outbound = {
  role: string;
  tool_calls: Array<ImageGenerationsMessageToolCalls$Outbound>;
};

/** @internal */
export const ImageGenerationsMessage3$outboundSchema: z.ZodType<
  ImageGenerationsMessage3$Outbound,
  z.ZodTypeDef,
  ImageGenerationsMessage3
> = z.object({
  role: ImageGenerationsMessageRouterImagesResponseRole$outboundSchema,
  toolCalls: z.array(
    z.lazy(() => ImageGenerationsMessageToolCalls$outboundSchema),
  ),
}).transform((v) => {
  return remap$(v, {
    toolCalls: "tool_calls",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImageGenerationsMessage3$ {
  /** @deprecated use `ImageGenerationsMessage3$inboundSchema` instead. */
  export const inboundSchema = ImageGenerationsMessage3$inboundSchema;
  /** @deprecated use `ImageGenerationsMessage3$outboundSchema` instead. */
  export const outboundSchema = ImageGenerationsMessage3$outboundSchema;
  /** @deprecated use `ImageGenerationsMessage3$Outbound` instead. */
  export type Outbound = ImageGenerationsMessage3$Outbound;
}

/** @internal */
export const ImageGenerationsMessageRouterImagesRole$inboundSchema:
  z.ZodNativeEnum<typeof ImageGenerationsMessageRouterImagesRole> = z
    .nativeEnum(ImageGenerationsMessageRouterImagesRole);

/** @internal */
export const ImageGenerationsMessageRouterImagesRole$outboundSchema:
  z.ZodNativeEnum<typeof ImageGenerationsMessageRouterImagesRole> =
    ImageGenerationsMessageRouterImagesRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImageGenerationsMessageRouterImagesRole$ {
  /** @deprecated use `ImageGenerationsMessageRouterImagesRole$inboundSchema` instead. */
  export const inboundSchema =
    ImageGenerationsMessageRouterImagesRole$inboundSchema;
  /** @deprecated use `ImageGenerationsMessageRouterImagesRole$outboundSchema` instead. */
  export const outboundSchema =
    ImageGenerationsMessageRouterImagesRole$outboundSchema;
}

/** @internal */
export const ImageGenerationsMessage2$inboundSchema: z.ZodType<
  ImageGenerationsMessage2,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: ImageGenerationsMessageRouterImagesRole$inboundSchema,
  url: z.string(),
});

/** @internal */
export type ImageGenerationsMessage2$Outbound = {
  role: string;
  url: string;
};

/** @internal */
export const ImageGenerationsMessage2$outboundSchema: z.ZodType<
  ImageGenerationsMessage2$Outbound,
  z.ZodTypeDef,
  ImageGenerationsMessage2
> = z.object({
  role: ImageGenerationsMessageRouterImagesRole$outboundSchema,
  url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImageGenerationsMessage2$ {
  /** @deprecated use `ImageGenerationsMessage2$inboundSchema` instead. */
  export const inboundSchema = ImageGenerationsMessage2$inboundSchema;
  /** @deprecated use `ImageGenerationsMessage2$outboundSchema` instead. */
  export const outboundSchema = ImageGenerationsMessage2$outboundSchema;
  /** @deprecated use `ImageGenerationsMessage2$Outbound` instead. */
  export type Outbound = ImageGenerationsMessage2$Outbound;
}

/** @internal */
export const ImageGenerationsMessageRole$inboundSchema: z.ZodNativeEnum<
  typeof ImageGenerationsMessageRole
> = z.nativeEnum(ImageGenerationsMessageRole);

/** @internal */
export const ImageGenerationsMessageRole$outboundSchema: z.ZodNativeEnum<
  typeof ImageGenerationsMessageRole
> = ImageGenerationsMessageRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImageGenerationsMessageRole$ {
  /** @deprecated use `ImageGenerationsMessageRole$inboundSchema` instead. */
  export const inboundSchema = ImageGenerationsMessageRole$inboundSchema;
  /** @deprecated use `ImageGenerationsMessageRole$outboundSchema` instead. */
  export const outboundSchema = ImageGenerationsMessageRole$outboundSchema;
}

/** @internal */
export const ImageGenerationsMessage1$inboundSchema: z.ZodType<
  ImageGenerationsMessage1,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: ImageGenerationsMessageRole$inboundSchema,
  content: z.nullable(z.string()),
});

/** @internal */
export type ImageGenerationsMessage1$Outbound = {
  role: string;
  content: string | null;
};

/** @internal */
export const ImageGenerationsMessage1$outboundSchema: z.ZodType<
  ImageGenerationsMessage1$Outbound,
  z.ZodTypeDef,
  ImageGenerationsMessage1
> = z.object({
  role: ImageGenerationsMessageRole$outboundSchema,
  content: z.nullable(z.string()),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImageGenerationsMessage1$ {
  /** @deprecated use `ImageGenerationsMessage1$inboundSchema` instead. */
  export const inboundSchema = ImageGenerationsMessage1$inboundSchema;
  /** @deprecated use `ImageGenerationsMessage1$outboundSchema` instead. */
  export const outboundSchema = ImageGenerationsMessage1$outboundSchema;
  /** @deprecated use `ImageGenerationsMessage1$Outbound` instead. */
  export type Outbound = ImageGenerationsMessage1$Outbound;
}

/** @internal */
export const ImageGenerationsMessage$inboundSchema: z.ZodType<
  ImageGenerationsMessage,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => ImageGenerationsMessage1$inboundSchema),
  z.lazy(() => ImageGenerationsMessage2$inboundSchema),
  z.lazy(() => ImageGenerationsMessage3$inboundSchema),
]);

/** @internal */
export type ImageGenerationsMessage$Outbound =
  | ImageGenerationsMessage1$Outbound
  | ImageGenerationsMessage2$Outbound
  | ImageGenerationsMessage3$Outbound;

/** @internal */
export const ImageGenerationsMessage$outboundSchema: z.ZodType<
  ImageGenerationsMessage$Outbound,
  z.ZodTypeDef,
  ImageGenerationsMessage
> = z.union([
  z.lazy(() => ImageGenerationsMessage1$outboundSchema),
  z.lazy(() => ImageGenerationsMessage2$outboundSchema),
  z.lazy(() => ImageGenerationsMessage3$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImageGenerationsMessage$ {
  /** @deprecated use `ImageGenerationsMessage$inboundSchema` instead. */
  export const inboundSchema = ImageGenerationsMessage$inboundSchema;
  /** @deprecated use `ImageGenerationsMessage$outboundSchema` instead. */
  export const outboundSchema = ImageGenerationsMessage$outboundSchema;
  /** @deprecated use `ImageGenerationsMessage$Outbound` instead. */
  export type Outbound = ImageGenerationsMessage$Outbound;
}

/** @internal */
export const ImageGenerationsChoices$inboundSchema: z.ZodType<
  ImageGenerationsChoices,
  z.ZodTypeDef,
  unknown
> = z.object({
  finish_reason: z.nullable(z.string()).optional(),
  index: z.number(),
  message: z.union([
    z.lazy(() => ImageGenerationsMessage1$inboundSchema),
    z.lazy(() => ImageGenerationsMessage2$inboundSchema),
    z.lazy(() => ImageGenerationsMessage3$inboundSchema),
  ]).optional(),
}).transform((v) => {
  return remap$(v, {
    "finish_reason": "finishReason",
  });
});

/** @internal */
export type ImageGenerationsChoices$Outbound = {
  finish_reason?: string | null | undefined;
  index: number;
  message?:
    | ImageGenerationsMessage1$Outbound
    | ImageGenerationsMessage2$Outbound
    | ImageGenerationsMessage3$Outbound
    | undefined;
};

/** @internal */
export const ImageGenerationsChoices$outboundSchema: z.ZodType<
  ImageGenerationsChoices$Outbound,
  z.ZodTypeDef,
  ImageGenerationsChoices
> = z.object({
  finishReason: z.nullable(z.string()).optional(),
  index: z.number(),
  message: z.union([
    z.lazy(() => ImageGenerationsMessage1$outboundSchema),
    z.lazy(() => ImageGenerationsMessage2$outboundSchema),
    z.lazy(() => ImageGenerationsMessage3$outboundSchema),
  ]).optional(),
}).transform((v) => {
  return remap$(v, {
    finishReason: "finish_reason",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImageGenerationsChoices$ {
  /** @deprecated use `ImageGenerationsChoices$inboundSchema` instead. */
  export const inboundSchema = ImageGenerationsChoices$inboundSchema;
  /** @deprecated use `ImageGenerationsChoices$outboundSchema` instead. */
  export const outboundSchema = ImageGenerationsChoices$outboundSchema;
  /** @deprecated use `ImageGenerationsChoices$Outbound` instead. */
  export type Outbound = ImageGenerationsChoices$Outbound;
}

/** @internal */
export const ImageGenerationsResponseBody$inboundSchema: z.ZodType<
  ImageGenerationsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  created: z.number(),
  choices: z.array(z.lazy(() => ImageGenerationsChoices$inboundSchema)),
  model: z.string(),
  object: z.string(),
});

/** @internal */
export type ImageGenerationsResponseBody$Outbound = {
  id: string;
  created: number;
  choices: Array<ImageGenerationsChoices$Outbound>;
  model: string;
  object: string;
};

/** @internal */
export const ImageGenerationsResponseBody$outboundSchema: z.ZodType<
  ImageGenerationsResponseBody$Outbound,
  z.ZodTypeDef,
  ImageGenerationsResponseBody
> = z.object({
  id: z.string(),
  created: z.number(),
  choices: z.array(z.lazy(() => ImageGenerationsChoices$outboundSchema)),
  model: z.string(),
  object: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImageGenerationsResponseBody$ {
  /** @deprecated use `ImageGenerationsResponseBody$inboundSchema` instead. */
  export const inboundSchema = ImageGenerationsResponseBody$inboundSchema;
  /** @deprecated use `ImageGenerationsResponseBody$outboundSchema` instead. */
  export const outboundSchema = ImageGenerationsResponseBody$outboundSchema;
  /** @deprecated use `ImageGenerationsResponseBody$Outbound` instead. */
  export type Outbound = ImageGenerationsResponseBody$Outbound;
}
